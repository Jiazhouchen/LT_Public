<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.2">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="comma" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="False" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': '', 'ucl': '0', 'skip': '0'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="False" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="fileList" updates="None" name="Resources"/>
    <Param val="True" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="False" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="norm" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="LetterTask_SparseFeedback" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="debug" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="inst">
      <TextComponent name="upperMsg1">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="upperMsg1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.80)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Welcome to the experiment. " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.7" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="upperMsg2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.065" valType="code" updates="constant" name="letterHeight"/>
        <Param val="upperMsg2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.65)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="On each trial, we will show you a few letters, for example: " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.7" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="example1">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="example1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.50)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="X F A B" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.7" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="midMsg1">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.065" valType="code" updates="constant" name="letterHeight"/>
        <Param val="midMsg1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please order these letters alphabetically in your mind. In this case: " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="2" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="example2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="example2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.20)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="A B F X" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.065" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="and remember this sequence of letters. &amp;#10;&amp;#10;We will then show you one of the letters, and you should tell us at what alphabetical position that letter is. &amp;#10;&amp;#10;For instance, if we show you 'B',  you should press the number 2 on your keyboard. If we show you 'X', you should press the number 4 on your keyboard. &amp;#10;&amp;#10;In most trials, you will not receive feedback on whether your response was correct or not. &amp;#10;&amp;#10;Once in a while, we will show you correct responses count and accuracy percentage. The count and percentage will reset after you see them. " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.7" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="rightnext">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="rightnext" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.65, -0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Right Arrow Key: Next Page " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'right','esc'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="setup">
      <CodeComponent name="setup_code">
        <Param val="from numpy.random import uniform&amp;#10;from math import sqrt&amp;#10;&amp;#10;tcount = 0;&amp;#10;ccount = 0;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="var con_file, inst_loop_n, rewPer, tcount, ccount, p_change, t_roll, rewDur, encoding_t,choice_t,fb_t;&amp;#10;function getRandomInt(min, max) {&amp;#10;  min = Math.ceil(min);&amp;#10;  max = Math.floor(max);&amp;#10;  return Math.floor(Math.random() * (max - min)) + min; &amp;#10;}&amp;#10;&amp;#10;tcount = 0;&amp;#10;ccount = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((expInfo[&quot;skip&quot;] === &quot;1&quot;)) {&amp;#10;    inst_loop_n = 0;&amp;#10;} else {&amp;#10;    inst_loop_n = 1;&amp;#10;}&amp;#10;&amp;#10;if ((expInfo[&quot;ucl&quot;] === &quot;1&quot;)) {&amp;#10;    run_nih_consent = 0;&amp;#10;} else {&amp;#10;    run_nih_consent = 1;&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if expInfo['skip']=='1':&amp;#10;    inst_loop_n = 0&amp;#10;else: &amp;#10;    inst_loop_n = 1&amp;#10;&amp;#10;if expInfo['ucl']=='1':&amp;#10;    run_nih_consent = 0&amp;#10;else: &amp;#10;    run_nih_consent = 1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="setup_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="trial">
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="t_isi = getRandomInt(500, 800)/1000;&amp;#10;encoding_t = Math.sqrt(N);&amp;#10;choice_t = 3;&amp;#10;fb_t = 1&amp;#10;psychoJS.experiment.addData(&quot;ISI&quot;, t_isi);" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="t_isi = uniform(0.5,0.8)&amp;#10;encoding_t = sqrt(N);&amp;#10;choice_t = 3;&amp;#10;fb_t = 1&amp;#10;thisExp.addData('ISI', t_isi)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="tcount = tcount+1;&amp;#10;if (TargetResp.corr) {&amp;#10;    ccount = ccount + 1;&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="tcount = tcount+1;&amp;#10;if TargetResp.corr:&amp;#10;    ccount = ccount + 1;&amp;#10;    " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="preorder">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.35" valType="code" updates="constant" name="letterHeight"/>
        <Param val="preorder" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="encoding_t" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$list_og" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="assist">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="assist" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.7)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="encoding_t" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Alphabetize..." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="ISI_fix">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.2" valType="code" updates="constant" name="letterHeight"/>
        <Param val="ISI_fix" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="encoding_t" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="t_isi" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="letter">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.4" valType="code" updates="constant" name="letterHeight"/>
        <Param val="letter" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="encoding_t +t_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="choice_t" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$target_letter" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="3" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="testMsgUpper">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="code" updates="constant" name="letterHeight"/>
        <Param val="testMsgUpper" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.6)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="encoding_t +t_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="choice_t" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="After alphabetization, what is the position of ..." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="testMsgLower">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="code" updates="constant" name="letterHeight"/>
        <Param val="testMsgLower" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.6)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="encoding_t+t_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="choice_t" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Use numeric key to make a response." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="TargetResp">
        <Param val="'1','2','3','4','5','6','7','8','9'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$cor_pos" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="TargetResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="encoding_t+t_isi" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="choice_t" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="debug">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="debug" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="encoding_t" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$encoding_t" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="fixation_cross">
      <CodeComponent name="ITI_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="dur_fixcross = getRandomInt(300, 1000)/1000;&amp;#10;psychoJS.experiment.addData(&quot;ITI&quot;, dur_fixcross);" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="dur_fixcross = uniform(0.3,1)&amp;#10;thisExp.addData('ITI', dur_fixcross)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ITI_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fixation2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.3" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fixation2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="dur_fixcross" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="extendedStr" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback">
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="rewPer = Math.round((ccount / tcount) * 1000)/10;&amp;#10;if (rewPer &gt; 80) {&amp;#10;    fbColor = [0.65, 0.8118, 0.545];&amp;#10;} else {&amp;#10;    fbColor = [0.8667, 0.5137, 0.513725];&amp;#10;}&amp;#10;rewPer = rewPer.toString();&amp;#10;ccount = ccount.toString();&amp;#10;tcount = tcount.toString();" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="rewPer = round((ccount / tcount)*100,1)&amp;#10;if rewPer &gt; 80:&amp;#10;    fbColor = [0.65,0.8118,0.545];&amp;#10;else:&amp;#10;    fbColor = [0.8667,0.5137,0.513725];&amp;#10;rewPer = str(rewPer)&amp;#10;ccount = str(ccount)&amp;#10;tcount = str(tcount)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="tcount=0;&amp;#10;ccount=0;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="tcount=0;&amp;#10;ccount=0;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$fbColor" valType="str" updates="set every repeat" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="set every repeat" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(1, 0.75)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="fb1">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="fb1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="[0,0.13]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'You got ' + ccount + ' / ' + tcount +' correct.' " valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="rewTxt">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.15" valType="code" updates="constant" name="letterHeight"/>
        <Param val="rewTxt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Your accuracy rate is ' + rewPer + '%'" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="mood_rate">
      <TextComponent name="ScaleMsgTop">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="code" updates="constant" name="letterHeight"/>
        <Param val="ScaleMsgTop" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.65)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Use the following scale to indicate your current mood:" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="ScaleMsgMain">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="ScaleMsgMain" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How happy are you currently?" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="ScaleMsgSec">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="code" updates="constant" name="letterHeight"/>
        <Param val="ScaleMsgSec" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Use your mouse to select" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="slider">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="HelveticaBold" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0.01" valType="code" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;Unhappy&quot;,&quot;Happy&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="[]" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="['rating']" valType="fixedList" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0,1, 2, 3, 4, 5,6,7,8,9,10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
    </Routine>
    <Routine name="consent">
      <TextComponent name="con_sec_title">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="con_sec_title" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$sectitle" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="con_main">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="code" updates="constant" name="letterHeight"/>
        <Param val="con_main" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$mainconsent" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="con_keytext">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="code" updates="constant" name="letterHeight"/>
        <Param val="con_keytext" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$keytext" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="y" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="IncompleteEnd">
      <TextComponent name="sur_end">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="sur_end" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Unfortunately you will have to agree to all statements to continue the study. The study will terminate now. &amp;#10;&amp;#10;Please press space bar to exit." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_5">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.quit()" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="core.quit();" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="statements">
      <TextComponent name="st_upper">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="st_upper" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$statement" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="st_lower">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="code" updates="constant" name="letterHeight"/>
        <Param val="st_lower" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$assist_st" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="st_key">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="y" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="st_key" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (st_key.corr) {&amp;#10;    YesConsent = 1;&amp;#10;    noConsent = 0;&amp;#10;} else {&amp;#10;    YesConsent = 0;&amp;#10;    noConsent = 1;&amp;#10;    st_loop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if st_key.corr:&amp;#10;    YesConsent=1;&amp;#10;    noConsent = 0;&amp;#10;else:&amp;#10;    YesConsent=0;&amp;#10;    noConsent=1;&amp;#10;    st_loop.finished=True;&amp;#10;    " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Inst_2">
      <TextComponent name="Msg1">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.065" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Msg1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.40)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You will earn the payment listed for this study. In addition, you will also earn “points” for each correct response. &amp;#10;&amp;#10;You will win additional bonus payment based on the total points at the end of the study." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.7" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Mag2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.065" valType="code" updates="constant" name="letterHeight"/>
        <Param val="Mag2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.20)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="We will also ask you to rate how happy you are at the end of every trial. &amp;#10;&amp;#10;You will provide your response by clicking on a scale using your mouse. &amp;#10;&amp;#10;When you are ready to start, press SPACE BAR to start." valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.7" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="left2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="left2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.65, -0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Left Arrow Key: Previous Page " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="right2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.65, -0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Space bar: Start the Study" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5">
        <Param val="'left','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="space" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_6">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (key_resp_5.corr) {&amp;#10;    rep_inst.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_5.corr: &amp;#10;    rep_inst.finished = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="effort_rating">
      <TextComponent name="ERateTopMsg">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="code" updates="constant" name="letterHeight"/>
        <Param val="ERateTopMsg" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.65)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Use the following scale to indicate:" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="ERateMainMsg">
        <Param val="white" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="ERateMainMsg" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.40)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How much effort did you put in for this trial?" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="ERateSecMsg">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.07" valType="code" updates="constant" name="letterHeight"/>
        <Param val="ERateSecMsg" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Use your mouse to select" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="effort_rate">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="HelveticaBold" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0.01" valType="code" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;Min&quot;,&quot;Max&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="effort_rate" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="[]" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="['rating']" valType="fixedList" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0,1, 2, 3, 4, 5,6,7,8,9,10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
    </Routine>
    <Routine name="break_2">
      <TextComponent name="text_2">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.2" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="new_sequence_alert">
      <TextComponent name="text_3">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.2" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="reward_info">
      <TextComponent name="asist_txt_1">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="asist_txt_1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="A new sequence is coming up.&amp;#10;&amp;#10;For this sequence, you could earn up to" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_4">
        <Param val="red" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.2" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$rewMag" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="end_nih">
      <TextComponent name="nih_endtext">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="nih_endtext" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for your participation!&amp;#10;&amp;#10;&amp;#10;Your completion code is: " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="mt_code">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arialbd" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.2" valType="num" updates="constant" name="letterHeight"/>
        <Param val="mt_code" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$passcode" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="nih_esp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="space" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="nih_esp" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_7">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (nih_esp.corr) {&amp;#10;    nih_end.finished = true;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;verify_ID&quot;, ID);" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if nih_esp.corr: &amp;#10;    nih_end.finished = True&amp;#10;thisExp.addData('verify_ID', ID);" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="nih_endtext2">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="nih_endtext2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please provide this code back to the MTurk page for completion credit. Come back here and press SPACE BAR to close the session after you provided the code.&amp;#10;&amp;#10;Failure to do so might result in forfeiting your compensation. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="reward_t_info">
      <CodeComponent name="code_8">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="rewPts = (rewPts - p_change);&amp;#10;if ((rewPts &lt; 0)) {&amp;#10;    rewPts = 0;&amp;#10;}&amp;#10;rewT = String(rewPts) + &quot; Pts&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="rewPts = rewPts - p_change&amp;#10;if rewPts &lt;0: &amp;#10;    rewPts = 0&amp;#10;&amp;#10;rewT = &quot;&quot;.join([str(rewPts),&quot; Pts&quot;])" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="rew_tx1">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="rew_tx1" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You have " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="rew_main">
        <Param val="red" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.2" valType="code" updates="constant" name="letterHeight"/>
        <Param val="rew_main" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$rewT" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_5">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="remaining for this sequence" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="end_prolific">
      <TextComponent name="ending_text">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="code" updates="constant" name="letterHeight"/>
        <Param val="ending_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for your participation!&amp;#10;&amp;#10;Press space bar to close the experiment. You will be redirected to get your compensation. " valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param val="'esc','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setup"/>
    <LoopInitiator loopType="TrialHandler" name="rep_inst">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="0" valType="code"/>
      <Param name="name" updates="None" val="rep_inst" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="page1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="page1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="inst"/>
    <LoopTerminator name="page1"/>
    <LoopInitiator loopType="TrialHandler" name="page2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="page2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Inst_2"/>
    <LoopTerminator name="page2"/>
    <LoopTerminator name="rep_inst"/>
    <LoopInitiator loopType="TrialHandler" name="pre_trial_mood">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="0" valType="code"/>
      <Param name="name" updates="None" val="pre_trial_mood" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="mood_rate"/>
    <Routine name="fixation_cross"/>
    <LoopTerminator name="pre_trial_mood"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('list_og', 'F J L N P R T H'), ('list_sort', 'FHJLNPRT'), ('N', 8), ('cor_pos', 2), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L N V R T P'), ('list_sort', 'LNPRTV'), ('N', 6), ('cor_pos', 2), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M G I K E O'), ('list_sort', 'EGIKMO'), ('N', 6), ('cor_pos', 3), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D N H J L F P R'), ('list_sort', 'DFHJLNPR'), ('N', 8), ('cor_pos', 6), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'S U Q'), ('list_sort', 'QSU'), ('N', 3), ('cor_pos', 1), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O S U Q'), ('list_sort', 'OQSU'), ('N', 4), ('cor_pos', 1), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'T R P'), ('list_sort', 'PRT'), ('N', 3), ('cor_pos', 3), ('target_letter', 'T'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H J P L N R T'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 5), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K M S O Q U W'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 3), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'E G O K M I'), ('list_sort', 'EGIKMO'), ('N', 6), ('cor_pos', 2), ('target_letter', 'G'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H L J N P T R V'), ('list_sort', 'HJLNPRTV'), ('N', 8), ('cor_pos', 3), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'S Q O U'), ('list_sort', 'OQSU'), ('N', 4), ('cor_pos', 1), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G K M I'), ('list_sort', 'GIKM'), ('N', 4), ('cor_pos', 3), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M I K G'), ('list_sort', 'GIKM'), ('N', 4), ('cor_pos', 4), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K O M S Q U'), ('list_sort', 'IKMOQSU'), ('N', 7), ('cor_pos', 2), ('target_letter', 'K'), ('fb_cd', 1)]), OrderedDict([('list_og', 'M E G I K'), ('list_sort', 'EGIKM'), ('N', 5), ('cor_pos', 1), ('target_letter', 'E'), ('fb_cd', 0)]), OrderedDict([('list_og', 'Q G I K M O S U'), ('list_sort', 'GIKMOQSU'), ('N', 8), ('cor_pos', 6), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F P J L N H R'), ('list_sort', 'FHJLNPR'), ('N', 7), ('cor_pos', 2), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'R D F H J L N P'), ('list_sort', 'DFHJLNPR'), ('N', 8), ('cor_pos', 7), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H J R L N P'), ('list_sort', 'DFHJLNPR'), ('N', 8), ('cor_pos', 1), ('target_letter', 'D'), ('fb_cd', 1)]), OrderedDict([('list_og', 'H D F'), ('list_sort', 'DFH'), ('N', 3), ('cor_pos', 2), ('target_letter', 'F'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G K M I O'), ('list_sort', 'GIKMO'), ('N', 5), ('cor_pos', 4), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O U S Q'), ('list_sort', 'OQSU'), ('N', 4), ('cor_pos', 3), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J P L N R'), ('list_sort', 'JLNPR'), ('N', 5), ('cor_pos', 3), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N J L P'), ('list_sort', 'JLNP'), ('N', 4), ('cor_pos', 3), ('target_letter', 'N'), ('fb_cd', 1)]), OrderedDict([('list_og', 'O M Q U S W'), ('list_sort', 'MOQSUW'), ('N', 6), ('cor_pos', 4), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F J H L P N'), ('list_sort', 'DFHJLNP'), ('N', 7), ('cor_pos', 6), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H P L N J R'), ('list_sort', 'HJLNPR'), ('N', 6), ('cor_pos', 2), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M S Q O U'), ('list_sort', 'MOQSU'), ('N', 5), ('cor_pos', 4), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M I K O Q S U'), ('list_sort', 'IKMOQSU'), ('N', 7), ('cor_pos', 7), ('target_letter', 'U'), ('fb_cd', 1)]), OrderedDict([('list_og', 'F H P L N J'), ('list_sort', 'FHJLNP'), ('N', 6), ('cor_pos', 4), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'Q K M O'), ('list_sort', 'KMOQ'), ('N', 4), ('cor_pos', 1), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L H J F'), ('list_sort', 'FHJL'), ('N', 4), ('cor_pos', 2), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H P J L N'), ('list_sort', 'HJLNP'), ('N', 5), ('cor_pos', 4), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I O K M Q S'), ('list_sort', 'GIKMOQS'), ('N', 7), ('cor_pos', 3), ('target_letter', 'K'), ('fb_cd', 1)]), OrderedDict([('list_og', 'I M O K Q'), ('list_sort', 'IKMOQ'), ('N', 5), ('cor_pos', 4), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'S K M O Q U W'), ('list_sort', 'KMOQSUW'), ('N', 7), ('cor_pos', 7), ('target_letter', 'W'), ('fb_cd', 0)]), OrderedDict([('list_og', 'Q M O S'), ('list_sort', 'MOQS'), ('N', 4), ('cor_pos', 3), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G U K M O Q S I W'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 7), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K M O S U Q W'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 3), ('target_letter', 'K'), ('fb_cd', 1)]), OrderedDict([('list_og', 'D F H J L T P R N'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 9), ('target_letter', 'T'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K Q O M S'), ('list_sort', 'GIKMOQS'), ('N', 7), ('cor_pos', 7), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D H J L N F'), ('list_sort', 'DFHJLN'), ('N', 6), ('cor_pos', 2), ('target_letter', 'F'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O M K Q'), ('list_sort', 'KMOQ'), ('N', 4), ('cor_pos', 2), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K M O W Q S U'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 1), ('target_letter', 'G'), ('fb_cd', 1)]), OrderedDict([('list_og', 'M O S U Q W'), ('list_sort', 'MOQSUW'), ('N', 6), ('cor_pos', 4), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F H J N P R L T V'), ('list_sort', 'FHJLNPRTV'), ('N', 9), ('cor_pos', 6), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J L N T R P V'), ('list_sort', 'JLNPRTV'), ('N', 7), ('cor_pos', 2), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I M K O Q S W U'), ('list_sort', 'IKMOQSUW'), ('N', 8), ('cor_pos', 2), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'E G I K M O U S Q'), ('list_sort', 'EGIKMOQSU'), ('N', 9), ('cor_pos', 5), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F P H J L N R'), ('list_sort', 'DFHJLNPR'), ('N', 8), ('cor_pos', 1), ('target_letter', 'D'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O K M I Q S U'), ('list_sort', 'IKMOQSU'), ('N', 7), ('cor_pos', 1), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J L H'), ('list_sort', 'HJL'), ('N', 3), ('cor_pos', 3), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N J L P R T V'), ('list_sort', 'JLNPRTV'), ('N', 7), ('cor_pos', 1), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G K M O I Q S U'), ('list_sort', 'GIKMOQSU'), ('N', 8), ('cor_pos', 5), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D H F J L P N'), ('list_sort', 'DFHJLNP'), ('N', 7), ('cor_pos', 5), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G O I K M'), ('list_sort', 'GIKMO'), ('N', 5), ('cor_pos', 5), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K G I E M O'), ('list_sort', 'EGIKMO'), ('N', 6), ('cor_pos', 1), ('target_letter', 'E'), ('fb_cd', 0)]), OrderedDict([('list_og', 'R F H J L N P D'), ('list_sort', 'DFHJLNPR'), ('N', 8), ('cor_pos', 7), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M Q O U S'), ('list_sort', 'MOQSU'), ('N', 5), ('cor_pos', 2), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H N J L P R T'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 5), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H J N P L'), ('list_sort', 'DFHJLNP'), ('N', 7), ('cor_pos', 6), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I E'), ('list_sort', 'EGI'), ('N', 3), ('cor_pos', 1), ('target_letter', 'E'), ('fb_cd', 0)]), OrderedDict([('list_og', 'Q O M S'), ('list_sort', 'MOQS'), ('N', 4), ('cor_pos', 2), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J H L P N R T'), ('list_sort', 'HJLNPRT'), ('N', 7), ('cor_pos', 5), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'T P R'), ('list_sort', 'PRT'), ('N', 3), ('cor_pos', 1), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M G I K'), ('list_sort', 'GIKM'), ('N', 4), ('cor_pos', 4), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'Q S O'), ('list_sort', 'OQS'), ('N', 3), ('cor_pos', 1), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G K I M Q O S U'), ('list_sort', 'GIKMOQSU'), ('N', 8), ('cor_pos', 2), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K O Q S U M'), ('list_sort', 'IKMOQSU'), ('N', 7), ('cor_pos', 5), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O I K M Q S U W'), ('list_sort', 'IKMOQSUW'), ('N', 8), ('cor_pos', 6), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I G M K O Q'), ('list_sort', 'GIKMOQ'), ('N', 6), ('cor_pos', 5), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N J L H P'), ('list_sort', 'HJLNP'), ('N', 5), ('cor_pos', 2), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H D F J L'), ('list_sort', 'DFHJL'), ('N', 5), ('cor_pos', 5), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F H J L P N T R'), ('list_sort', 'FHJLNPRT'), ('N', 8), ('cor_pos', 3), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'V J L N P R T'), ('list_sort', 'JLNPRTV'), ('N', 7), ('cor_pos', 2), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H F J L P N R T'), ('list_sort', 'FHJLNPRT'), ('N', 8), ('cor_pos', 6), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D J H F L N P R'), ('list_sort', 'DFHJLNPR'), ('N', 8), ('cor_pos', 7), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I G K M Q O S'), ('list_sort', 'GIKMOQS'), ('N', 7), ('cor_pos', 7), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M I K O'), ('list_sort', 'IKMO'), ('N', 4), ('cor_pos', 3), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K M O I'), ('list_sort', 'IKMO'), ('N', 4), ('cor_pos', 1), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J L V N P R T'), ('list_sort', 'JLNPRTV'), ('N', 7), ('cor_pos', 7), ('target_letter', 'V'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M S O Q'), ('list_sort', 'MOQS'), ('N', 4), ('cor_pos', 4), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J F H'), ('list_sort', 'FHJ'), ('N', 3), ('cor_pos', 2), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F J L H N P R'), ('list_sort', 'FHJLNPR'), ('N', 7), ('cor_pos', 6), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H F J L N P R V T'), ('list_sort', 'FHJLNPRTV'), ('N', 9), ('cor_pos', 8), ('target_letter', 'T'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F L H J N'), ('list_sort', 'DFHJLN'), ('N', 6), ('cor_pos', 1), ('target_letter', 'D'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K M O Q U W S'), ('list_sort', 'KMOQSUW'), ('N', 7), ('cor_pos', 1), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'P L N'), ('list_sort', 'LNP'), ('N', 3), ('cor_pos', 1), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K I G M'), ('list_sort', 'GIKM'), ('N', 4), ('cor_pos', 3), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F J L N P R H T'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 9), ('target_letter', 'T'), ('fb_cd', 0)]), OrderedDict([('list_og', 'U Q S'), ('list_sort', 'QSU'), ('N', 3), ('cor_pos', 2), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L N R T V P'), ('list_sort', 'LNPRTV'), ('N', 6), ('cor_pos', 1), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'P R N'), ('list_sort', 'NPR'), ('N', 3), ('cor_pos', 2), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M K O S Q U'), ('list_sort', 'KMOQSU'), ('N', 6), ('cor_pos', 5), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F L H J N P R T'), ('list_sort', 'FHJLNPRT'), ('N', 8), ('cor_pos', 6), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N P R L T'), ('list_sort', 'LNPRT'), ('N', 5), ('cor_pos', 3), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M G I K O Q S U'), ('list_sort', 'GIKMOQSU'), ('N', 8), ('cor_pos', 6), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M O U S Q'), ('list_sort', 'MOQSU'), ('N', 5), ('cor_pos', 2), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G E I K M O S Q'), ('list_sort', 'EGIKMOQS'), ('N', 8), ('cor_pos', 5), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'P N L R'), ('list_sort', 'LNPR'), ('N', 4), ('cor_pos', 2), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'Q M O S U'), ('list_sort', 'MOQSU'), ('N', 5), ('cor_pos', 1), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F H N J L P R T V'), ('list_sort', 'FHJLNPRTV'), ('N', 9), ('cor_pos', 8), ('target_letter', 'T'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K I G M O Q S'), ('list_sort', 'GIKMOQS'), ('N', 7), ('cor_pos', 3), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M O K'), ('list_sort', 'KMO'), ('N', 3), ('cor_pos', 1), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H F D'), ('list_sort', 'DFH'), ('N', 3), ('cor_pos', 1), ('target_letter', 'D'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K M I'), ('list_sort', 'IKM'), ('N', 3), ('cor_pos', 1), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N L P T R'), ('list_sort', 'LNPRT'), ('N', 5), ('cor_pos', 1), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'E K I G'), ('list_sort', 'EGIK'), ('N', 4), ('cor_pos', 1), ('target_letter', 'E'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K O M Q U S W'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 1), ('target_letter', 'G'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H F L J'), ('list_sort', 'FHJL'), ('N', 4), ('cor_pos', 3), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'R N P L T V'), ('list_sort', 'LNPRTV'), ('N', 6), ('cor_pos', 1), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H J R N P L T'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 3), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'P H J L N F R T V'), ('list_sort', 'FHJLNPRTV'), ('N', 9), ('cor_pos', 7), ('target_letter', 'R'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J L H N P R'), ('list_sort', 'HJLNPR'), ('N', 6), ('cor_pos', 3), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K I O M'), ('list_sort', 'IKMO'), ('N', 4), ('cor_pos', 2), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K I M O Q S W U'), ('list_sort', 'IKMOQSUW'), ('N', 8), ('cor_pos', 6), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'R T P'), ('list_sort', 'PRT'), ('N', 3), ('cor_pos', 3), ('target_letter', 'T'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O M Q U S'), ('list_sort', 'MOQSU'), ('N', 5), ('cor_pos', 2), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G O K M I Q'), ('list_sort', 'GIKMOQ'), ('N', 6), ('cor_pos', 5), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K M O Q S U E'), ('list_sort', 'EGIKMOQSU'), ('N', 9), ('cor_pos', 2), ('target_letter', 'G'), ('fb_cd', 0)]), OrderedDict([('list_og', 'S G I K M O Q U W'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 4), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L N R T P V'), ('list_sort', 'LNPRTV'), ('N', 6), ('cor_pos', 6), ('target_letter', 'V'), ('fb_cd', 0)]), OrderedDict([('list_og', 'E G O I K M'), ('list_sort', 'EGIKMO'), ('N', 6), ('cor_pos', 4), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K M O Q E S U'), ('list_sort', 'EGIKMOQSU'), ('N', 9), ('cor_pos', 7), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O M Q S W U'), ('list_sort', 'MOQSUW'), ('N', 6), ('cor_pos', 1), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L F H J N'), ('list_sort', 'FHJLN'), ('N', 5), ('cor_pos', 2), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K M O G Q'), ('list_sort', 'GIKMOQ'), ('N', 6), ('cor_pos', 2), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H J L P R N T V'), ('list_sort', 'HJLNPRTV'), ('N', 8), ('cor_pos', 1), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K G I'), ('list_sort', 'GIK'), ('N', 3), ('cor_pos', 2), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'Q M O'), ('list_sort', 'MOQ'), ('N', 3), ('cor_pos', 1), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K G'), ('list_sort', 'GIK'), ('N', 3), ('cor_pos', 2), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O Q M S'), ('list_sort', 'MOQS'), ('N', 4), ('cor_pos', 1), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G K I M Q O'), ('list_sort', 'GIKMOQ'), ('N', 6), ('cor_pos', 5), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H F D J'), ('list_sort', 'DFHJ'), ('N', 4), ('cor_pos', 4), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I G M K O'), ('list_sort', 'GIKMO'), ('N', 5), ('cor_pos', 4), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K E M O Q S U'), ('list_sort', 'EGIKMOQSU'), ('N', 9), ('cor_pos', 9), ('target_letter', 'U'), ('fb_cd', 0)]), OrderedDict([('list_og', 'E O G I K M Q S U'), ('list_sort', 'EGIKMOQSU'), ('N', 9), ('cor_pos', 3), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K M S O Q'), ('list_sort', 'GIKMOQS'), ('N', 7), ('cor_pos', 7), ('target_letter', 'S'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K O M Q U S W'), ('list_sort', 'KMOQSUW'), ('N', 7), ('cor_pos', 6), ('target_letter', 'U'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F H L N J P R T'), ('list_sort', 'FHJLNPRT'), ('N', 8), ('cor_pos', 2), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F L J H N'), ('list_sort', 'FHJLN'), ('N', 5), ('cor_pos', 2), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I K W M O Q S U'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 2), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D N F H J L P R'), ('list_sort', 'DFHJLNPR'), ('N', 8), ('cor_pos', 1), ('target_letter', 'D'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K E G I M O Q S'), ('list_sort', 'EGIKMOQS'), ('N', 8), ('cor_pos', 7), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K M S Q O U'), ('list_sort', 'KMOQSU'), ('N', 6), ('cor_pos', 3), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'Q G I K M O'), ('list_sort', 'GIKMOQ'), ('N', 6), ('cor_pos', 3), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'E G K M O Q S I'), ('list_sort', 'EGIKMOQS'), ('N', 8), ('cor_pos', 5), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F L J H'), ('list_sort', 'DFHJL'), ('N', 5), ('cor_pos', 5), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K O Q S M U'), ('list_sort', 'IKMOQSU'), ('N', 7), ('cor_pos', 7), ('target_letter', 'U'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H T J L N P R'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 1), ('target_letter', 'D'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L T N P R'), ('list_sort', 'LNPRT'), ('N', 5), ('cor_pos', 1), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G E I K M Q O S'), ('list_sort', 'EGIKMOQS'), ('N', 8), ('cor_pos', 2), ('target_letter', 'G'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J F H D L'), ('list_sort', 'DFHJL'), ('N', 5), ('cor_pos', 4), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H J L P N T R'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 8), ('target_letter', 'R'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M I K'), ('list_sort', 'IKM'), ('N', 3), ('cor_pos', 2), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K O Q M S'), ('list_sort', 'KMOQS'), ('N', 5), ('cor_pos', 1), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O I K M G Q S U W'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 6), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D L F H J N P R T'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 6), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K O M S Q'), ('list_sort', 'KMOQS'), ('N', 5), ('cor_pos', 3), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H F D J L'), ('list_sort', 'DFHJL'), ('N', 5), ('cor_pos', 5), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O K M'), ('list_sort', 'KMO'), ('N', 3), ('cor_pos', 1), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'S Q O'), ('list_sort', 'OQS'), ('N', 3), ('cor_pos', 1), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'P R N T'), ('list_sort', 'NPRT'), ('N', 4), ('cor_pos', 3), ('target_letter', 'R'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J N L R P T'), ('list_sort', 'JLNPRT'), ('N', 6), ('cor_pos', 1), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K I G'), ('list_sort', 'GIK'), ('N', 3), ('cor_pos', 2), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K U O Q S M W'), ('list_sort', 'IKMOQSUW'), ('N', 8), ('cor_pos', 8), ('target_letter', 'W'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M I K G O Q S'), ('list_sort', 'GIKMOQS'), ('N', 7), ('cor_pos', 1), ('target_letter', 'G'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H J L P R N T'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 2), ('target_letter', 'F'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I M O Q S K U'), ('list_sort', 'IKMOQSU'), ('N', 7), ('cor_pos', 5), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J H F L N P R T V'), ('list_sort', 'FHJLNPRTV'), ('N', 9), ('cor_pos', 6), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H J L F N'), ('list_sort', 'FHJLN'), ('N', 5), ('cor_pos', 3), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I G K M O S Q U'), ('list_sort', 'GIKMOQSU'), ('N', 8), ('cor_pos', 8), ('target_letter', 'U'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L N P R T J'), ('list_sort', 'JLNPRT'), ('N', 6), ('cor_pos', 1), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D F H L J N P T R'), ('list_sort', 'DFHJLNPRT'), ('N', 9), ('cor_pos', 1), ('target_letter', 'D'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K M Q S O U'), ('list_sort', 'IKMOQSU'), ('N', 7), ('cor_pos', 3), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L R N P T'), ('list_sort', 'LNPRT'), ('N', 5), ('cor_pos', 3), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I E K M O Q'), ('list_sort', 'EGIKMOQ'), ('N', 7), ('cor_pos', 7), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K O M Q U S'), ('list_sort', 'KMOQSU'), ('N', 6), ('cor_pos', 1), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K M O Q S U W I'), ('list_sort', 'IKMOQSUW'), ('N', 8), ('cor_pos', 3), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O Q M'), ('list_sort', 'MOQ'), ('N', 3), ('cor_pos', 2), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J L N P R T H'), ('list_sort', 'HJLNPRT'), ('N', 7), ('cor_pos', 5), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'K I O M Q S'), ('list_sort', 'IKMOQS'), ('N', 6), ('cor_pos', 5), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'H J L F'), ('list_sort', 'FHJL'), ('N', 4), ('cor_pos', 2), ('target_letter', 'H'), ('fb_cd', 0)]), OrderedDict([('list_og', 'E U G I K M O Q S'), ('list_sort', 'EGIKMOQSU'), ('N', 9), ('cor_pos', 4), ('target_letter', 'K'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N P R L'), ('list_sort', 'LNPR'), ('N', 4), ('cor_pos', 3), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L J H'), ('list_sort', 'HJL'), ('N', 3), ('cor_pos', 2), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N P L R'), ('list_sort', 'LNPR'), ('N', 4), ('cor_pos', 1), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J L R N P'), ('list_sort', 'JLNPR'), ('N', 5), ('cor_pos', 1), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K G M O'), ('list_sort', 'GIKMO'), ('N', 5), ('cor_pos', 5), ('target_letter', 'O'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J L N P H'), ('list_sort', 'HJLNP'), ('N', 5), ('cor_pos', 4), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'G I M O Q K S U W'), ('list_sort', 'GIKMOQSUW'), ('N', 9), ('cor_pos', 8), ('target_letter', 'U'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F H D J L N'), ('list_sort', 'DFHJLN'), ('N', 6), ('cor_pos', 4), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'P L N J'), ('list_sort', 'JLNP'), ('N', 4), ('cor_pos', 1), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'R N P'), ('list_sort', 'NPR'), ('N', 3), ('cor_pos', 1), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F H D J L N P'), ('list_sort', 'DFHJLNP'), ('N', 7), ('cor_pos', 7), ('target_letter', 'P'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I E G'), ('list_sort', 'EGI'), ('N', 3), ('cor_pos', 3), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'P N L'), ('list_sort', 'LNP'), ('N', 3), ('cor_pos', 2), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N D F H J L'), ('list_sort', 'DFHJLN'), ('N', 6), ('cor_pos', 5), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'F H D J'), ('list_sort', 'DFHJ'), ('N', 4), ('cor_pos', 2), ('target_letter', 'F'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I K M Q O S W U'), ('list_sort', 'IKMOQSUW'), ('N', 8), ('cor_pos', 5), ('target_letter', 'Q'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M G I K E'), ('list_sort', 'EGIKM'), ('N', 5), ('cor_pos', 3), ('target_letter', 'I'), ('fb_cd', 0)]), OrderedDict([('list_og', 'L R N P'), ('list_sort', 'LNPR'), ('N', 4), ('cor_pos', 1), ('target_letter', 'L'), ('fb_cd', 0)]), OrderedDict([('list_og', 'D R F H J L N P'), ('list_sort', 'DFHJLNPR'), ('N', 8), ('cor_pos', 4), ('target_letter', 'J'), ('fb_cd', 0)]), OrderedDict([('list_og', 'T J L N P R H'), ('list_sort', 'HJLNPRT'), ('N', 7), ('cor_pos', 7), ('target_letter', 'T'), ('fb_cd', 0)]), OrderedDict([('list_og', 'N L J'), ('list_sort', 'JLN'), ('N', 3), ('cor_pos', 3), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'J L N P R H'), ('list_sort', 'HJLNPR'), ('N', 6), ('cor_pos', 4), ('target_letter', 'N'), ('fb_cd', 0)]), OrderedDict([('list_og', 'O Q S M'), ('list_sort', 'MOQS'), ('N', 4), ('cor_pos', 1), ('target_letter', 'M'), ('fb_cd', 0)]), OrderedDict([('list_og', 'I G E'), ('list_sort', 'EGI'), ('N', 3), ('cor_pos', 2), ('target_letter', 'G'), ('fb_cd', 0)]), OrderedDict([('list_og', 'M K I'), ('list_sort', 'IKM'), ('N', 3), ('cor_pos', 2), ('target_letter', 'K'), ('fb_cd', 0)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="contingency_SR.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <LoopInitiator loopType="TrialHandler" name="fb_logical">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="fb_yn" valType="num"/>
      <Param name="name" updates="None" val="fb_logical" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="feedback"/>
    <LoopTerminator name="fb_logical"/>
    <Routine name="fixation_cross"/>
    <Routine name="mood_rate"/>
    <Routine name="fixation_cross"/>
    <LoopTerminator name="trials"/>
    <LoopInitiator loopType="TrialHandler" name="nih_end">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('passcode', 'VYMP_4931'), ('ID', 342805101)]), OrderedDict([('passcode', 'IJGI_4540'), ('ID', 414612688)]), OrderedDict([('passcode', 'GSJK_8054'), ('ID', 257390294)]), OrderedDict([('passcode', 'LZRT_5196'), ('ID', 528949674)]), OrderedDict([('passcode', 'DOFE_8757'), ('ID', 342098547)]), OrderedDict([('passcode', 'IMCU_0463'), ('ID', 113129783)]), OrderedDict([('passcode', 'SZTN_2621'), ('ID', 472991757)]), OrderedDict([('passcode', 'SRRI_0753'), ('ID', 573899395)]), OrderedDict([('passcode', 'OXAG_1969'), ('ID', 48628734)]), OrderedDict([('passcode', 'EMUT_7497'), ('ID', 146722466)]), OrderedDict([('passcode', 'VEEN_2207'), ('ID', 696793270)]), OrderedDict([('passcode', 'WVXZ_2119'), ('ID', 780695700)]), OrderedDict([('passcode', 'UMBB_7078'), ('ID', 772032017)]), OrderedDict([('passcode', 'RWTA_5035'), ('ID', 628729128)]), OrderedDict([('passcode', 'ZEVY_5967'), ('ID', 567138239)]), OrderedDict([('passcode', 'PDAR_5576'), ('ID', 251459680)]), OrderedDict([('passcode', 'NKRI_0673'), ('ID', 721491547)]), OrderedDict([('passcode', 'JFKV_7763'), ('ID', 224421235)]), OrderedDict([('passcode', 'DDTU_6878'), ('ID', 603539519)]), OrderedDict([('passcode', 'NDGH_1568'), ('ID', 788505217)]), OrderedDict([('passcode', 'IEOU_3068'), ('ID', 441923778)]), OrderedDict([('passcode', 'CFNN_5865'), ('ID', 104787759)]), OrderedDict([('passcode', 'RQWE_9250'), ('ID', 219451668)]), OrderedDict([('passcode', 'HTGI_8824'), ('ID', 105480902)]), OrderedDict([('passcode', 'WQUF_8826'), ('ID', 557898798)]), OrderedDict([('passcode', 'SPCL_1765'), ('ID', 388377270)]), OrderedDict([('passcode', 'QKIP_4865'), ('ID', 380052431)]), OrderedDict([('passcode', 'HKNG_0010'), ('ID', 495497062)]), OrderedDict([('passcode', 'ZKNZ_3350'), ('ID', 122646970)]), OrderedDict([('passcode', 'GTZN_6472'), ('ID', 692617956)]), OrderedDict([('passcode', 'JWVP_5007'), ('ID', 307602204)]), OrderedDict([('passcode', 'ZPNN_9167'), ('ID', 12224796)]), OrderedDict([('passcode', 'BSXV_9329'), ('ID', 379322087)]), OrderedDict([('passcode', 'XTSH_6054'), ('ID', 602989888)]), OrderedDict([('passcode', 'EABY_8667'), ('ID', 985251063)]), OrderedDict([('passcode', 'IDRU_2525'), ('ID', 934763958)]), OrderedDict([('passcode', 'QUAS_6081'), ('ID', 874144588)]), OrderedDict([('passcode', 'AQLL_5994'), ('ID', 605746481)]), OrderedDict([('passcode', 'WZZX_4042'), ('ID', 894386524)]), OrderedDict([('passcode', 'TJXE_3279'), ('ID', 391033943)]), OrderedDict([('passcode', 'NTWD_5295'), ('ID', 960520072)]), OrderedDict([('passcode', 'THVY_8934'), ('ID', 422298964)]), OrderedDict([('passcode', 'ATBK_8692'), ('ID', 594032968)]), OrderedDict([('passcode', 'JYSU_7671'), ('ID', 480235580)]), OrderedDict([('passcode', 'ZBMH_7367'), ('ID', 985035899)]), OrderedDict([('passcode', 'MWFH_6935'), ('ID', 37214812)]), OrderedDict([('passcode', 'AKGI_6906'), ('ID', 935719453)]), OrderedDict([('passcode', 'HUQE_7283'), ('ID', 515610263)]), OrderedDict([('passcode', 'JZWL_3534'), ('ID', 204487946)]), OrderedDict([('passcode', 'MLTG_0019'), ('ID', 160135243)]), OrderedDict([('passcode', 'SKWP_5041'), ('ID', 458486416)]), OrderedDict([('passcode', 'ZPRB_6717'), ('ID', 727359400)]), OrderedDict([('passcode', 'TDAR_6328'), ('ID', 284872165)]), OrderedDict([('passcode', 'SPOD_1354'), ('ID', 82048589)]), OrderedDict([('passcode', 'QZZJ_2431'), ('ID', 181934184)]), OrderedDict([('passcode', 'QDSR_3413'), ('ID', 915952136)]), OrderedDict([('passcode', 'JHSU_9885'), ('ID', 720478421)]), OrderedDict([('passcode', 'FZEO_9491'), ('ID', 887830689)]), OrderedDict([('passcode', 'TUBV_1529'), ('ID', 398880176)]), OrderedDict([('passcode', 'XYYG_8729'), ('ID', 574081060)]), OrderedDict([('passcode', 'WUZV_6259'), ('ID', 226882364)]), OrderedDict([('passcode', 'BLIN_9155'), ('ID', 919529904)]), OrderedDict([('passcode', 'YPYD_3661'), ('ID', 204366724)]), OrderedDict([('passcode', 'NOXB_2296'), ('ID', 777954317)]), OrderedDict([('passcode', 'ZBAU_8771'), ('ID', 829703248)]), OrderedDict([('passcode', 'NTOV_5900'), ('ID', 541263754)]), OrderedDict([('passcode', 'ESFT_2896'), ('ID', 633252895)]), OrderedDict([('passcode', 'GFDD_8276'), ('ID', 715772820)]), OrderedDict([('passcode', 'FFDH_7175'), ('ID', 915763783)]), OrderedDict([('passcode', 'ELQK_0449'), ('ID', 187487941)]), OrderedDict([('passcode', 'YVKP_9004'), ('ID', 818587864)]), OrderedDict([('passcode', 'YGUS_9118'), ('ID', 994007824)]), OrderedDict([('passcode', 'PILJ_4958'), ('ID', 523584480)]), OrderedDict([('passcode', 'ENEY_9035'), ('ID', 448262820)]), OrderedDict([('passcode', 'JZKB_9586'), ('ID', 7436496)]), OrderedDict([('passcode', 'JIJL_7618'), ('ID', 648525176)]), OrderedDict([('passcode', 'FCZA_6001'), ('ID', 867027797)]), OrderedDict([('passcode', 'HWLL_4141'), ('ID', 96173348)]), OrderedDict([('passcode', 'GEBZ_8199'), ('ID', 366619288)]), OrderedDict([('passcode', 'NMPG_6775'), ('ID', 115271254)]), OrderedDict([('passcode', 'RVRR_9816'), ('ID', 205871870)]), OrderedDict([('passcode', 'THUQ_0404'), ('ID', 57392924)]), OrderedDict([('passcode', 'NRFS_9805'), ('ID', 975182649)]), OrderedDict([('passcode', 'XHKK_2994'), ('ID', 819274873)]), OrderedDict([('passcode', 'XJWT_8916'), ('ID', 168640457)]), OrderedDict([('passcode', 'PKCD_4038'), ('ID', 729177150)]), OrderedDict([('passcode', 'QYEL_2024'), ('ID', 438121716)]), OrderedDict([('passcode', 'NFKX_0165'), ('ID', 642324791)]), OrderedDict([('passcode', 'DNZS_3667'), ('ID', 899331795)]), OrderedDict([('passcode', 'NCLI_1932'), ('ID', 835895476)]), OrderedDict([('passcode', 'IXOU_5294'), ('ID', 65772741)]), OrderedDict([('passcode', 'IBWH_4435'), ('ID', 600197643)]), OrderedDict([('passcode', 'BRFJ_7638'), ('ID', 947099256)]), OrderedDict([('passcode', 'POYG_1345'), ('ID', 7866299)]), OrderedDict([('passcode', 'PVNA_6154'), ('ID', 344835389)]), OrderedDict([('passcode', 'QNSA_3308'), ('ID', 796458540)]), OrderedDict([('passcode', 'WKFW_8280'), ('ID', 358275505)]), OrderedDict([('passcode', 'HJLJ_2557'), ('ID', 485384698)]), OrderedDict([('passcode', 'WQVD_9013'), ('ID', 398696806)]), OrderedDict([('passcode', 'QFQK_9484'), ('ID', 852991579)]), OrderedDict([('passcode', 'YOXZ_1804'), ('ID', 815308596)]), OrderedDict([('passcode', 'ANTX_9518'), ('ID', 868685503)]), OrderedDict([('passcode', 'UQIP_3688'), ('ID', 967155919)]), OrderedDict([('passcode', 'NTSS_5687'), ('ID', 877210822)]), OrderedDict([('passcode', 'AMPI_5910'), ('ID', 738358663)]), OrderedDict([('passcode', 'JWZJ_0137'), ('ID', 316703506)]), OrderedDict([('passcode', 'AASQ_4934'), ('ID', 513434824)]), OrderedDict([('passcode', 'WOAV_4634'), ('ID', 594411036)]), OrderedDict([('passcode', 'CMDE_8789'), ('ID', 65150686)]), OrderedDict([('passcode', 'ULNM_6671'), ('ID', 518986899)]), OrderedDict([('passcode', 'IDCW_2054'), ('ID', 744744454)]), OrderedDict([('passcode', 'UDBG_2409'), ('ID', 197554305)]), OrderedDict([('passcode', 'ANFN_0990'), ('ID', 428797537)]), OrderedDict([('passcode', 'RNXG_2697'), ('ID', 784854814)]), OrderedDict([('passcode', 'WWTM_2680'), ('ID', 203817183)]), OrderedDict([('passcode', 'GGWC_1280'), ('ID', 713510600)]), OrderedDict([('passcode', 'ZODV_0307'), ('ID', 275266307)]), OrderedDict([('passcode', 'VBQU_1997'), ('ID', 521268654)]), OrderedDict([('passcode', 'YGCN_3405'), ('ID', 622906103)]), OrderedDict([('passcode', 'FKBH_4088'), ('ID', 900243954)]), OrderedDict([('passcode', 'ZWKV_7460'), ('ID', 842504696)]), OrderedDict([('passcode', 'VSFR_0212'), ('ID', 934335094)]), OrderedDict([('passcode', 'FZVO_5672'), ('ID', 590184324)]), OrderedDict([('passcode', 'KEVS_5864'), ('ID', 916076792)]), OrderedDict([('passcode', 'UNTZ_0888'), ('ID', 648872896)]), OrderedDict([('passcode', 'PLBL_5335'), ('ID', 16703543)]), OrderedDict([('passcode', 'VAUZ_9089'), ('ID', 651085182)]), OrderedDict([('passcode', 'MQVC_9407'), ('ID', 9956574)]), OrderedDict([('passcode', 'XSQQ_5386'), ('ID', 320476725)]), OrderedDict([('passcode', 'INXT_9717'), ('ID', 467010054)]), OrderedDict([('passcode', 'LZKT_4170'), ('ID', 895328961)]), OrderedDict([('passcode', 'JLRQ_2434'), ('ID', 368591750)]), OrderedDict([('passcode', 'XAQR_5991'), ('ID', 441437531)]), OrderedDict([('passcode', 'NOIE_4095'), ('ID', 713617126)]), OrderedDict([('passcode', 'GIBO_3688'), ('ID', 128771966)]), OrderedDict([('passcode', 'DHWS_3081'), ('ID', 435172121)]), OrderedDict([('passcode', 'HAYG_3055'), ('ID', 277156149)]), OrderedDict([('passcode', 'KPOS_7575'), ('ID', 637649399)]), OrderedDict([('passcode', 'FACR_8365'), ('ID', 422720449)]), OrderedDict([('passcode', 'QLRH_2485'), ('ID', 966988914)]), OrderedDict([('passcode', 'KLFV_7652'), ('ID', 879627719)]), OrderedDict([('passcode', 'WPJN_3354'), ('ID', 572422706)]), OrderedDict([('passcode', 'HGFX_8343'), ('ID', 668671908)]), OrderedDict([('passcode', 'HEEH_1700'), ('ID', 696073943)]), OrderedDict([('passcode', 'FZRF_4963'), ('ID', 478950415)]), OrderedDict([('passcode', 'IXOG_5708'), ('ID', 274497093)]), OrderedDict([('passcode', 'TJRN_7906'), ('ID', 76920781)]), OrderedDict([('passcode', 'GMTU_7908'), ('ID', 173069396)]), OrderedDict([('passcode', 'GDUK_8170'), ('ID', 94644907)]), OrderedDict([('passcode', 'YQDB_2719'), ('ID', 699998306)]), OrderedDict([('passcode', 'QSMN_2328'), ('ID', 961379761)]), OrderedDict([('passcode', 'VAHP_8695'), ('ID', 337358754)]), OrderedDict([('passcode', 'OCKQ_4708'), ('ID', 469910541)]), OrderedDict([('passcode', 'KFAO_2050'), ('ID', 898586893)]), OrderedDict([('passcode', 'ASEQ_1397'), ('ID', 714687528)]), OrderedDict([('passcode', 'PPXE_9011'), ('ID', 314521620)]), OrderedDict([('passcode', 'ZDPT_9486'), ('ID', 336307334)]), OrderedDict([('passcode', 'WJMT_8597'), ('ID', 625921691)]), OrderedDict([('passcode', 'OYEX_6121'), ('ID', 158161322)]), OrderedDict([('passcode', 'TNKD_2855'), ('ID', 361249976)]), OrderedDict([('passcode', 'BVDP_3969'), ('ID', 440969580)]), OrderedDict([('passcode', 'VFDX_5427'), ('ID', 631606444)]), OrderedDict([('passcode', 'ICGV_0814'), ('ID', 400821731)]), OrderedDict([('passcode', 'ERLG_3936'), ('ID', 517084213)]), OrderedDict([('passcode', 'QKJQ_8752'), ('ID', 887107102)]), OrderedDict([('passcode', 'GNPZ_7552'), ('ID', 129573208)]), OrderedDict([('passcode', 'AGNG_8128'), ('ID', 438993776)]), OrderedDict([('passcode', 'AQAT_5202'), ('ID', 335215636)]), OrderedDict([('passcode', 'KLOU_4312'), ('ID', 196680139)]), OrderedDict([('passcode', 'WEHE_4808'), ('ID', 525862315)]), OrderedDict([('passcode', 'JGAZ_0781'), ('ID', 871639318)]), OrderedDict([('passcode', 'IEPC_3737'), ('ID', 712284608)]), OrderedDict([('passcode', 'AGTM_5954'), ('ID', 351373873)]), OrderedDict([('passcode', 'TUIS_0620'), ('ID', 997452390)]), OrderedDict([('passcode', 'BNZA_5408'), ('ID', 607363434)]), OrderedDict([('passcode', 'HLZE_3396'), ('ID', 604413702)]), OrderedDict([('passcode', 'ENAL_8221'), ('ID', 177509503)]), OrderedDict([('passcode', 'CCDB_2334'), ('ID', 584553508)]), OrderedDict([('passcode', 'SHDR_3043'), ('ID', 610409761)]), OrderedDict([('passcode', 'OASX_1561'), ('ID', 764759606)]), OrderedDict([('passcode', 'WMHN_6994'), ('ID', 949019918)]), OrderedDict([('passcode', 'ZLBJ_6260'), ('ID', 934200598)]), OrderedDict([('passcode', 'VPJJ_0272'), ('ID', 241309921)]), OrderedDict([('passcode', 'QQDO_6318'), ('ID', 63594035)]), OrderedDict([('passcode', 'YGKB_1004'), ('ID', 966642177)]), OrderedDict([('passcode', 'FJWI_7296'), ('ID', 883141633)]), OrderedDict([('passcode', 'AJLL_6606'), ('ID', 464495026)]), OrderedDict([('passcode', 'ZSJY_6075'), ('ID', 57197867)]), OrderedDict([('passcode', 'VPTX_1678'), ('ID', 262505088)]), OrderedDict([('passcode', 'AKFW_2117'), ('ID', 201588162)]), OrderedDict([('passcode', 'NSKH_9778'), ('ID', 454070205)]), OrderedDict([('passcode', 'VJZG_9250'), ('ID', 667601246)]), OrderedDict([('passcode', 'CJAB_8946'), ('ID', 729502103)]), OrderedDict([('passcode', 'JJXJ_3482'), ('ID', 78855332)]), OrderedDict([('passcode', 'GHEE_4188'), ('ID', 931058743)]), OrderedDict([('passcode', 'QYPA_8540'), ('ID', 943513628)]), OrderedDict([('passcode', 'EEIU_7470'), ('ID', 832814872)]), OrderedDict([('passcode', 'UOYS_6057'), ('ID', 467024954)]), OrderedDict([('passcode', 'RDMV_9506'), ('ID', 774301787)]), OrderedDict([('passcode', 'AQWH_9307'), ('ID', 161756761)]), OrderedDict([('passcode', 'AJBT_6674'), ('ID', 115278967)]), OrderedDict([('passcode', 'MDFW_9746'), ('ID', 481060896)]), OrderedDict([('passcode', 'UVIK_7293'), ('ID', 703208595)]), OrderedDict([('passcode', 'IASM_1582'), ('ID', 514008364)]), OrderedDict([('passcode', 'NNZX_5380'), ('ID', 428239366)]), OrderedDict([('passcode', 'NYGT_4772'), ('ID', 275802837)]), OrderedDict([('passcode', 'IAEZ_5936'), ('ID', 996647675)]), OrderedDict([('passcode', 'OKOZ_7336'), ('ID', 624424805)]), OrderedDict([('passcode', 'JIKN_7907'), ('ID', 900197114)]), OrderedDict([('passcode', 'NGWK_1773'), ('ID', 722917033)]), OrderedDict([('passcode', 'UFPM_6446'), ('ID', 445807052)]), OrderedDict([('passcode', 'DJTK_7070'), ('ID', 690135138)]), OrderedDict([('passcode', 'UHKZ_1286'), ('ID', 933000019)]), OrderedDict([('passcode', 'AWXH_8971'), ('ID', 628883146)]), OrderedDict([('passcode', 'LLMW_4875'), ('ID', 67743092)]), OrderedDict([('passcode', 'LQPS_5119'), ('ID', 53419263)]), OrderedDict([('passcode', 'OGIQ_4873'), ('ID', 53865932)]), OrderedDict([('passcode', 'JOAO_2386'), ('ID', 540639061)]), OrderedDict([('passcode', 'NTRK_6378'), ('ID', 234613217)]), OrderedDict([('passcode', 'TMTG_7378'), ('ID', 703787969)]), OrderedDict([('passcode', 'CGFL_9982'), ('ID', 935311225)]), OrderedDict([('passcode', 'FWPC_5683'), ('ID', 289248153)]), OrderedDict([('passcode', 'EEYT_5449'), ('ID', 465987786)]), OrderedDict([('passcode', 'NNRV_0937'), ('ID', 716410732)]), OrderedDict([('passcode', 'WMAD_7902'), ('ID', 925623739)]), OrderedDict([('passcode', 'KBDH_7766'), ('ID', 627848002)]), OrderedDict([('passcode', 'NOHV_3796'), ('ID', 321763345)]), OrderedDict([('passcode', 'YQAO_2282'), ('ID', 729672549)]), OrderedDict([('passcode', 'ZBDC_3963'), ('ID', 163014973)]), OrderedDict([('passcode', 'IZRM_8918'), ('ID', 628930500)]), OrderedDict([('passcode', 'ORCZ_8110'), ('ID', 854368245)]), OrderedDict([('passcode', 'FHTQ_1494'), ('ID', 518474437)]), OrderedDict([('passcode', 'EZBL_5807'), ('ID', 395254765)]), OrderedDict([('passcode', 'UCMY_0445'), ('ID', 338730016)]), OrderedDict([('passcode', 'NQZS_9732'), ('ID', 952951344)]), OrderedDict([('passcode', 'EFFZ_9243'), ('ID', 414389219)]), OrderedDict([('passcode', 'CPTT_5901'), ('ID', 901467997)]), OrderedDict([('passcode', 'ETYG_7430'), ('ID', 948321008)]), OrderedDict([('passcode', 'RAVP_3193'), ('ID', 852603944)]), OrderedDict([('passcode', 'SWKZ_8283'), ('ID', 10741491)]), OrderedDict([('passcode', 'FHFO_9797'), ('ID', 452089382)]), OrderedDict([('passcode', 'XNHE_5883'), ('ID', 999615783)]), OrderedDict([('passcode', 'YKRV_8962'), ('ID', 471883520)]), OrderedDict([('passcode', 'SIEU_3356'), ('ID', 445258323)]), OrderedDict([('passcode', 'UXEP_0935'), ('ID', 687158777)]), OrderedDict([('passcode', 'MDKH_6311'), ('ID', 409893839)]), OrderedDict([('passcode', 'UMSN_6904'), ('ID', 243674103)]), OrderedDict([('passcode', 'URNE_6843'), ('ID', 528142763)]), OrderedDict([('passcode', 'RPGP_1072'), ('ID', 52894422)]), OrderedDict([('passcode', 'BGTF_3701'), ('ID', 441091990)]), OrderedDict([('passcode', 'RQJI_3477'), ('ID', 144167976)]), OrderedDict([('passcode', 'XEMC_0470'), ('ID', 948544411)]), OrderedDict([('passcode', 'FWHJ_2604'), ('ID', 913767203)]), OrderedDict([('passcode', 'GNSX_6876'), ('ID', 551784258)]), OrderedDict([('passcode', 'PFHW_3535'), ('ID', 48679139)]), OrderedDict([('passcode', 'IMOW_9635'), ('ID', 109083008)]), OrderedDict([('passcode', 'SMUF_0419'), ('ID', 648331242)]), OrderedDict([('passcode', 'RLVH_6830'), ('ID', 298216776)]), OrderedDict([('passcode', 'QRQS_7525'), ('ID', 403607798)]), OrderedDict([('passcode', 'JVIB_8675'), ('ID', 254239919)]), OrderedDict([('passcode', 'CHLX_8575'), ('ID', 155132570)]), OrderedDict([('passcode', 'MORO_3606'), ('ID', 548304470)]), OrderedDict([('passcode', 'VWKL_7767'), ('ID', 950639924)]), OrderedDict([('passcode', 'JFYB_8229'), ('ID', 282809735)]), OrderedDict([('passcode', 'OHGH_6040'), ('ID', 648061096)]), OrderedDict([('passcode', 'HNLS_8676'), ('ID', 146287434)]), OrderedDict([('passcode', 'YPJO_4331'), ('ID', 613078529)]), OrderedDict([('passcode', 'EFRI_5249'), ('ID', 496030870)]), OrderedDict([('passcode', 'AHFU_5455'), ('ID', 982406583)]), OrderedDict([('passcode', 'YGBB_0627'), ('ID', 161426198)]), OrderedDict([('passcode', 'OEJG_4146'), ('ID', 719416)]), OrderedDict([('passcode', 'UDFS_9419'), ('ID', 489408099)]), OrderedDict([('passcode', 'DLSY_7513'), ('ID', 868223251)]), OrderedDict([('passcode', 'FKDR_4480'), ('ID', 886933346)]), OrderedDict([('passcode', 'VRIW_9153'), ('ID', 79727404)]), OrderedDict([('passcode', 'PRGU_7568'), ('ID', 791304688)]), OrderedDict([('passcode', 'MLHT_6840'), ('ID', 605998914)]), OrderedDict([('passcode', 'COVL_3811'), ('ID', 701939386)]), OrderedDict([('passcode', 'IRRO_5929'), ('ID', 38542217)]), OrderedDict([('passcode', 'ARXG_1367'), ('ID', 528180139)]), OrderedDict([('passcode', 'WEIB_7768'), ('ID', 275997500)]), OrderedDict([('passcode', 'TIXW_9580'), ('ID', 370870781)]), OrderedDict([('passcode', 'ZOXD_5024'), ('ID', 200897529)]), OrderedDict([('passcode', 'AXNV_0042'), ('ID', 569168504)]), OrderedDict([('passcode', 'DDLC_0026'), ('ID', 986724105)]), OrderedDict([('passcode', 'VWAC_1492'), ('ID', 18189345)]), OrderedDict([('passcode', 'ICLV_1210'), ('ID', 848155404)]), OrderedDict([('passcode', 'EMGL_3076'), ('ID', 196436493)]), OrderedDict([('passcode', 'VYNY_5596'), ('ID', 269812015)]), OrderedDict([('passcode', 'YFOQ_3955'), ('ID', 450326108)]), OrderedDict([('passcode', 'MMYT_8987'), ('ID', 821480024)]), OrderedDict([('passcode', 'UXQM_0734'), ('ID', 212883358)]), OrderedDict([('passcode', 'UFJP_0423'), ('ID', 870662819)]), OrderedDict([('passcode', 'WRPA_7024'), ('ID', 343339625)]), OrderedDict([('passcode', 'KJBU_9963'), ('ID', 333144297)]), OrderedDict([('passcode', 'EDYC_0935'), ('ID', 376875329)]), OrderedDict([('passcode', 'OWZX_6699'), ('ID', 794449249)]), OrderedDict([('passcode', 'TCVL_6767'), ('ID', 482739966)]), OrderedDict([('passcode', 'WCKP_3883'), ('ID', 990294334)]), OrderedDict([('passcode', 'BFYL_7640'), ('ID', 236426475)]), OrderedDict([('passcode', 'DUWW_2255'), ('ID', 163473864)]), OrderedDict([('passcode', 'ARPW_1249'), ('ID', 259001228)]), OrderedDict([('passcode', 'DRKK_7082'), ('ID', 520996045)]), OrderedDict([('passcode', 'STSH_4471'), ('ID', 376970264)]), OrderedDict([('passcode', 'SRAV_1145'), ('ID', 154654657)]), OrderedDict([('passcode', 'LXMY_9784'), ('ID', 258508808)]), OrderedDict([('passcode', 'WBCW_8508'), ('ID', 37993823)]), OrderedDict([('passcode', 'GCDA_2638'), ('ID', 775813713)]), OrderedDict([('passcode', 'HSGW_3147'), ('ID', 188504042)]), OrderedDict([('passcode', 'GDOG_5354'), ('ID', 969559369)]), OrderedDict([('passcode', 'GNOH_2731'), ('ID', 133656330)]), OrderedDict([('passcode', 'LFFD_4094'), ('ID', 39481135)]), OrderedDict([('passcode', 'YFQV_2938'), ('ID', 19974370)]), OrderedDict([('passcode', 'EWKT_4391'), ('ID', 751604045)]), OrderedDict([('passcode', 'XJFU_2014'), ('ID', 136500968)]), OrderedDict([('passcode', 'TVTY_7329'), ('ID', 99007754)]), OrderedDict([('passcode', 'VZKK_5673'), ('ID', 630201791)]), OrderedDict([('passcode', 'XPTN_2676'), ('ID', 669393908)]), OrderedDict([('passcode', 'ZQVW_3859'), ('ID', 463249108)]), OrderedDict([('passcode', 'HHNH_5635'), ('ID', 902966228)]), OrderedDict([('passcode', 'MCTM_2223'), ('ID', 990326987)]), OrderedDict([('passcode', 'OEFR_2696'), ('ID', 608795842)]), OrderedDict([('passcode', 'HXPN_9472'), ('ID', 898824927)]), OrderedDict([('passcode', 'CWAU_0265'), ('ID', 221499824)]), OrderedDict([('passcode', 'GQXQ_6725'), ('ID', 962674657)]), OrderedDict([('passcode', 'OEXS_4634'), ('ID', 750820611)]), OrderedDict([('passcode', 'KIPH_4586'), ('ID', 562190050)]), OrderedDict([('passcode', 'HJNL_8307'), ('ID', 521206838)]), OrderedDict([('passcode', 'AERD_8707'), ('ID', 617594616)]), OrderedDict([('passcode', 'RMNE_4331'), ('ID', 208629619)]), OrderedDict([('passcode', 'HDBN_5446'), ('ID', 855086246)]), OrderedDict([('passcode', 'XZSQ_5798'), ('ID', 29799909)]), OrderedDict([('passcode', 'OPMJ_4717'), ('ID', 599640401)]), OrderedDict([('passcode', 'VJDZ_5954'), ('ID', 44964545)]), OrderedDict([('passcode', 'FOLZ_1553'), ('ID', 551607041)]), OrderedDict([('passcode', 'TGQE_7431'), ('ID', 232531234)]), OrderedDict([('passcode', 'MLSN_7971'), ('ID', 833887743)]), OrderedDict([('passcode', 'IBVZ_0621'), ('ID', 577725913)]), OrderedDict([('passcode', 'TUJS_3104'), ('ID', 141432389)]), OrderedDict([('passcode', 'VDKI_3503'), ('ID', 424009129)]), OrderedDict([('passcode', 'UATX_5348'), ('ID', 490162540)]), OrderedDict([('passcode', 'SPJT_1712'), ('ID', 778185855)]), OrderedDict([('passcode', 'HGCB_7171'), ('ID', 582656018)]), OrderedDict([('passcode', 'KRBR_8347'), ('ID', 663197470)]), OrderedDict([('passcode', 'HOFA_6164'), ('ID', 817516954)]), OrderedDict([('passcode', 'LGMQ_3332'), ('ID', 224242696)]), OrderedDict([('passcode', 'UILE_6138'), ('ID', 248317848)]), OrderedDict([('passcode', 'TZTR_2632'), ('ID', 469783885)]), OrderedDict([('passcode', 'AYSJ_9955'), ('ID', 815192678)]), OrderedDict([('passcode', 'BYTF_4413'), ('ID', 200381974)]), OrderedDict([('passcode', 'ELZV_3911'), ('ID', 347989181)]), OrderedDict([('passcode', 'YHSF_7243'), ('ID', 88144128)]), OrderedDict([('passcode', 'ZGDO_9365'), ('ID', 581211188)]), OrderedDict([('passcode', 'VFQO_7221'), ('ID', 360844895)]), OrderedDict([('passcode', 'BOIH_5150'), ('ID', 657749767)]), OrderedDict([('passcode', 'WYFV_6873'), ('ID', 149596181)]), OrderedDict([('passcode', 'GZFH_2597'), ('ID', 557920051)]), OrderedDict([('passcode', 'TUQS_5757'), ('ID', 196147754)]), OrderedDict([('passcode', 'OBDR_6989'), ('ID', 346725266)]), OrderedDict([('passcode', 'MZWG_4355'), ('ID', 806199113)]), OrderedDict([('passcode', 'QYJT_8494'), ('ID', 429783778)]), OrderedDict([('passcode', 'LDAB_6174'), ('ID', 417495952)]), OrderedDict([('passcode', 'HUIL_3893'), ('ID', 133870899)]), OrderedDict([('passcode', 'MXFN_6449'), ('ID', 312808344)]), OrderedDict([('passcode', 'ZUHC_5483'), ('ID', 900812110)]), OrderedDict([('passcode', 'XDEX_0700'), ('ID', 900668147)]), OrderedDict([('passcode', 'BSQC_2198'), ('ID', 964446904)]), OrderedDict([('passcode', 'BWYI_9107'), ('ID', 106623831)]), OrderedDict([('passcode', 'NMKU_3083'), ('ID', 545769580)]), OrderedDict([('passcode', 'UTIJ_6113'), ('ID', 612862566)]), OrderedDict([('passcode', 'AWNK_5609'), ('ID', 450402553)]), OrderedDict([('passcode', 'ERGH_4916'), ('ID', 504848183)]), OrderedDict([('passcode', 'EYQD_4172'), ('ID', 495111480)]), OrderedDict([('passcode', 'CVQH_4969'), ('ID', 756231717)]), OrderedDict([('passcode', 'QAPR_4151'), ('ID', 25936125)]), OrderedDict([('passcode', 'NCSB_0712'), ('ID', 53722850)]), OrderedDict([('passcode', 'CARO_8316'), ('ID', 946959221)]), OrderedDict([('passcode', 'WPVX_9545'), ('ID', 151476044)]), OrderedDict([('passcode', 'GHLA_5127'), ('ID', 255222103)]), OrderedDict([('passcode', 'QHCB_0939'), ('ID', 483634627)]), OrderedDict([('passcode', 'QRKU_9895'), ('ID', 326275204)]), OrderedDict([('passcode', 'SONI_1912'), ('ID', 159216676)]), OrderedDict([('passcode', 'YFVA_7389'), ('ID', 795005145)]), OrderedDict([('passcode', 'YLUL_9848'), ('ID', 437434155)]), OrderedDict([('passcode', 'AWUH_1761'), ('ID', 498226270)]), OrderedDict([('passcode', 'YYJA_5135'), ('ID', 975211616)]), OrderedDict([('passcode', 'OMJC_6571'), ('ID', 395115170)]), OrderedDict([('passcode', 'ZWSM_3840'), ('ID', 695747947)]), OrderedDict([('passcode', 'PTME_0946'), ('ID', 508278677)]), OrderedDict([('passcode', 'IAIT_2529'), ('ID', 718443762)]), OrderedDict([('passcode', 'NJST_9909'), ('ID', 221668856)]), OrderedDict([('passcode', 'RMFI_4737'), ('ID', 575857156)]), OrderedDict([('passcode', 'GZID_9099'), ('ID', 594537631)]), OrderedDict([('passcode', 'WACC_6575'), ('ID', 133372116)]), OrderedDict([('passcode', 'ZOTS_2932'), ('ID', 954346784)]), OrderedDict([('passcode', 'JPYM_5218'), ('ID', 924130822)]), OrderedDict([('passcode', 'UUTO_4905'), ('ID', 296852364)]), OrderedDict([('passcode', 'ULCH_3145'), ('ID', 776025054)]), OrderedDict([('passcode', 'VZEO_6631'), ('ID', 988925606)]), OrderedDict([('passcode', 'GIBH_3954'), ('ID', 750609759)]), OrderedDict([('passcode', 'GTUB_9806'), ('ID', 272054029)]), OrderedDict([('passcode', 'DDVC_5415'), ('ID', 721742542)]), OrderedDict([('passcode', 'YVOK_9675'), ('ID', 684864992)]), OrderedDict([('passcode', 'PARV_5276'), ('ID', 231083421)]), OrderedDict([('passcode', 'VOVS_1381'), ('ID', 211954802)]), OrderedDict([('passcode', 'JHFJ_1746'), ('ID', 359252279)]), OrderedDict([('passcode', 'QLMR_7076'), ('ID', 236674879)]), OrderedDict([('passcode', 'EOVW_8009'), ('ID', 874966331)]), OrderedDict([('passcode', 'GMNB_9881'), ('ID', 135683438)]), OrderedDict([('passcode', 'PKHD_8352'), ('ID', 945103391)]), OrderedDict([('passcode', 'IAEP_3674'), ('ID', 148981847)]), OrderedDict([('passcode', 'SBYK_1746'), ('ID', 761184220)]), OrderedDict([('passcode', 'SKVG_7580'), ('ID', 662601006)]), OrderedDict([('passcode', 'WTZG_5250'), ('ID', 644698389)]), OrderedDict([('passcode', 'XBCG_0350'), ('ID', 356858580)]), OrderedDict([('passcode', 'QRNF_3835'), ('ID', 87776258)]), OrderedDict([('passcode', 'WYTZ_5156'), ('ID', 969743351)]), OrderedDict([('passcode', 'INPT_3217'), ('ID', 661084411)]), OrderedDict([('passcode', 'VEXI_7373'), ('ID', 862053739)]), OrderedDict([('passcode', 'KALM_3715'), ('ID', 743734693)]), OrderedDict([('passcode', 'UQSP_6638'), ('ID', 203565484)]), OrderedDict([('passcode', 'EBJW_8315'), ('ID', 556410119)]), OrderedDict([('passcode', 'URYG_4598'), ('ID', 433876200)]), OrderedDict([('passcode', 'GNRL_2815'), ('ID', 609442159)]), OrderedDict([('passcode', 'HYBR_9569'), ('ID', 776373927)]), OrderedDict([('passcode', 'TLMB_7649'), ('ID', 742652928)]), OrderedDict([('passcode', 'WOKO_8951'), ('ID', 207408113)]), OrderedDict([('passcode', 'JMLK_0855'), ('ID', 139892646)]), OrderedDict([('passcode', 'WFYT_6322'), ('ID', 221825999)]), OrderedDict([('passcode', 'AZHT_8639'), ('ID', 601867640)]), OrderedDict([('passcode', 'FYTH_0411'), ('ID', 106648835)]), OrderedDict([('passcode', 'RBTI_7535'), ('ID', 370651602)]), OrderedDict([('passcode', 'LMZF_8383'), ('ID', 145409965)]), OrderedDict([('passcode', 'XWAU_9389'), ('ID', 54647375)]), OrderedDict([('passcode', 'SFYY_0003'), ('ID', 133602774)]), OrderedDict([('passcode', 'VSOC_3591'), ('ID', 181313276)]), OrderedDict([('passcode', 'XZOU_3213'), ('ID', 473264321)]), OrderedDict([('passcode', 'YBQZ_7294'), ('ID', 425531540)]), OrderedDict([('passcode', 'UPIT_3971'), ('ID', 700602717)]), OrderedDict([('passcode', 'VGYY_0524'), ('ID', 596617256)]), OrderedDict([('passcode', 'MBWK_7155'), ('ID', 819581757)]), OrderedDict([('passcode', 'GMOP_0653'), ('ID', 89735916)]), OrderedDict([('passcode', 'YMHU_4755'), ('ID', 447240126)]), OrderedDict([('passcode', 'IKVX_3685'), ('ID', 357417269)]), OrderedDict([('passcode', 'FORB_7152'), ('ID', 68501015)]), OrderedDict([('passcode', 'FHQP_8336'), ('ID', 708059023)]), OrderedDict([('passcode', 'DOAP_7330'), ('ID', 57044530)]), OrderedDict([('passcode', 'BXTH_6373'), ('ID', 861948911)]), OrderedDict([('passcode', 'NMBN_0318'), ('ID', 411227918)]), OrderedDict([('passcode', 'JWPM_4222'), ('ID', 385890370)]), OrderedDict([('passcode', 'XJIR_0903'), ('ID', 238751049)]), OrderedDict([('passcode', 'LKVU_1066'), ('ID', 875384258)]), OrderedDict([('passcode', 'ZVEL_4447'), ('ID', 496349281)]), OrderedDict([('passcode', 'WBLV_7117'), ('ID', 136265590)]), OrderedDict([('passcode', 'CUCR_7970'), ('ID', 370087994)]), OrderedDict([('passcode', 'EBDL_8683'), ('ID', 207578859)]), OrderedDict([('passcode', 'OUPZ_3747'), ('ID', 98728254)]), OrderedDict([('passcode', 'IRKD_4025'), ('ID', 571435804)]), OrderedDict([('passcode', 'VSGH_5261'), ('ID', 330942792)]), OrderedDict([('passcode', 'TIOG_5032'), ('ID', 972779889)]), OrderedDict([('passcode', 'WQHP_6973'), ('ID', 552050397)]), OrderedDict([('passcode', 'MYQJ_6164'), ('ID', 610500115)]), OrderedDict([('passcode', 'KMIM_6744'), ('ID', 58842595)]), OrderedDict([('passcode', 'GOGP_8787'), ('ID', 356646815)]), OrderedDict([('passcode', 'ZWTN_0749'), ('ID', 355449883)]), OrderedDict([('passcode', 'TAPS_1018'), ('ID', 587377102)]), OrderedDict([('passcode', 'VXTP_6065'), ('ID', 433851557)]), OrderedDict([('passcode', 'HSTS_0160'), ('ID', 947236939)]), OrderedDict([('passcode', 'RVRK_4189'), ('ID', 354188180)]), OrderedDict([('passcode', 'KQMY_8341'), ('ID', 388755139)]), OrderedDict([('passcode', 'HXET_6737'), ('ID', 26121673)]), OrderedDict([('passcode', 'QGSP_1612'), ('ID', 930772676)]), OrderedDict([('passcode', 'QSGY_9039'), ('ID', 627626100)]), OrderedDict([('passcode', 'YSPX_8075'), ('ID', 314704782)]), OrderedDict([('passcode', 'QREI_2862'), ('ID', 647406115)]), OrderedDict([('passcode', 'ZWTD_3442'), ('ID', 703435138)]), OrderedDict([('passcode', 'IJOM_9025'), ('ID', 586456965)]), OrderedDict([('passcode', 'RSTF_8512'), ('ID', 875670598)]), OrderedDict([('passcode', 'UFMQ_0598'), ('ID', 109579337)]), OrderedDict([('passcode', 'PQSI_2157'), ('ID', 543036281)]), OrderedDict([('passcode', 'FVMY_2070'), ('ID', 875736744)]), OrderedDict([('passcode', 'NGNF_9868'), ('ID', 803978518)]), OrderedDict([('passcode', 'KTDB_6421'), ('ID', 601924561)]), OrderedDict([('passcode', 'BIGI_7873'), ('ID', 235864260)]), OrderedDict([('passcode', 'NBNV_7405'), ('ID', 973404525)]), OrderedDict([('passcode', 'UWBD_9939'), ('ID', 941117027)]), OrderedDict([('passcode', 'YEMM_2649'), ('ID', 953343755)]), OrderedDict([('passcode', 'MYVO_6095'), ('ID', 613515271)]), OrderedDict([('passcode', 'CGSP_0438'), ('ID', 188026617)]), OrderedDict([('passcode', 'AFAF_3891'), ('ID', 944234360)]), OrderedDict([('passcode', 'YTBC_0557'), ('ID', 864339824)]), OrderedDict([('passcode', 'GWYZ_1870'), ('ID', 36917704)]), OrderedDict([('passcode', 'JFYL_1566'), ('ID', 224549137)]), OrderedDict([('passcode', 'VLQS_9031'), ('ID', 544473559)]), OrderedDict([('passcode', 'LTQL_5926'), ('ID', 638533457)]), OrderedDict([('passcode', 'JHSZ_7614'), ('ID', 375364551)]), OrderedDict([('passcode', 'SJVS_0724'), ('ID', 978368422)]), OrderedDict([('passcode', 'RCAZ_5961'), ('ID', 282732236)]), OrderedDict([('passcode', 'WQTT_1445'), ('ID', 272149124)]), OrderedDict([('passcode', 'YBER_1657'), ('ID', 92660210)]), OrderedDict([('passcode', 'HHSV_1619'), ('ID', 325935451)]), OrderedDict([('passcode', 'SHAL_8961'), ('ID', 553305400)]), OrderedDict([('passcode', 'VYMT_3477'), ('ID', 730884439)]), OrderedDict([('passcode', 'ONEF_9402'), ('ID', 891199311)]), OrderedDict([('passcode', 'YGDY_5866'), ('ID', 688033456)]), OrderedDict([('passcode', 'QOYQ_7740'), ('ID', 460697503)]), OrderedDict([('passcode', 'YPGL_7952'), ('ID', 8423259)]), OrderedDict([('passcode', 'MCDA_1999'), ('ID', 878971023)]), OrderedDict([('passcode', 'VPSC_1808'), ('ID', 774048473)]), OrderedDict([('passcode', 'HIGF_9470'), ('ID', 911231125)]), OrderedDict([('passcode', 'GAAU_8382'), ('ID', 293722210)]), OrderedDict([('passcode', 'NWGC_8617'), ('ID', 536386839)]), OrderedDict([('passcode', 'NNGY_5692'), ('ID', 396788614)]), OrderedDict([('passcode', 'AQKN_4833'), ('ID', 452995291)]), OrderedDict([('passcode', 'GOVY_5565'), ('ID', 396753437)]), OrderedDict([('passcode', 'HAGU_3835'), ('ID', 311051351)]), OrderedDict([('passcode', 'CDPH_8177'), ('ID', 772282919)]), OrderedDict([('passcode', 'DTOM_0123'), ('ID', 69893556)]), OrderedDict([('passcode', 'RWDM_5151'), ('ID', 774790140)]), OrderedDict([('passcode', 'KOVC_3869'), ('ID', 148563745)]), OrderedDict([('passcode', 'VEAF_1318'), ('ID', 768872808)]), OrderedDict([('passcode', 'JXMZ_0623'), ('ID', 985714728)]), OrderedDict([('passcode', 'YVTH_4028'), ('ID', 400531340)]), OrderedDict([('passcode', 'CQNF_4375'), ('ID', 785317846)]), OrderedDict([('passcode', 'JWRM_7839'), ('ID', 264776701)]), OrderedDict([('passcode', 'DIYZ_0544'), ('ID', 136366000)]), OrderedDict([('passcode', 'IFCI_8978'), ('ID', 925598738)]), OrderedDict([('passcode', 'EDPN_5557'), ('ID', 220290615)]), OrderedDict([('passcode', 'GXER_6921'), ('ID', 209925779)]), OrderedDict([('passcode', 'XJKX_5286'), ('ID', 305163591)]), OrderedDict([('passcode', 'KVAN_1733'), ('ID', 289892392)]), OrderedDict([('passcode', 'QUQJ_0942'), ('ID', 910161581)]), OrderedDict([('passcode', 'LIPU_5162'), ('ID', 111309614)]), OrderedDict([('passcode', 'VVFO_8895'), ('ID', 588287624)]), OrderedDict([('passcode', 'AQNY_9611'), ('ID', 265615520)]), OrderedDict([('passcode', 'GAWZ_1336'), ('ID', 285609381)]), OrderedDict([('passcode', 'HBWV_8469'), ('ID', 961644314)]), OrderedDict([('passcode', 'HYOQ_8296'), ('ID', 262256940)]), OrderedDict([('passcode', 'XJQF_2339'), ('ID', 138704919)]), OrderedDict([('passcode', 'AMQM_1916'), ('ID', 237131645)]), OrderedDict([('passcode', 'WRRX_3756'), ('ID', 976262758)]), OrderedDict([('passcode', 'NTKW_9522'), ('ID', 247328932)]), OrderedDict([('passcode', 'UNGH_5778'), ('ID', 18327389)]), OrderedDict([('passcode', 'WNZC_2327'), ('ID', 412842652)]), OrderedDict([('passcode', 'SBQU_0731'), ('ID', 601252407)]), OrderedDict([('passcode', 'JAGK_5823'), ('ID', 248415931)]), OrderedDict([('passcode', 'BUGN_0229'), ('ID', 553798026)]), OrderedDict([('passcode', 'RTCV_2819'), ('ID', 709574812)]), OrderedDict([('passcode', 'IUPO_7993'), ('ID', 509245439)]), OrderedDict([('passcode', 'SDLR_3376'), ('ID', 473037118)]), OrderedDict([('passcode', 'ZHNS_8405'), ('ID', 641176360)]), OrderedDict([('passcode', 'PAXF_4558'), ('ID', 86531533)]), OrderedDict([('passcode', 'NSQD_8908'), ('ID', 456426105)]), OrderedDict([('passcode', 'BEQU_0807'), ('ID', 61418827)]), OrderedDict([('passcode', 'HGFQ_1778'), ('ID', 247303673)]), OrderedDict([('passcode', 'LEZI_3040'), ('ID', 780282388)]), OrderedDict([('passcode', 'DQBM_4548'), ('ID', 452103489)]), OrderedDict([('passcode', 'BCJD_2257'), ('ID', 376767631)]), OrderedDict([('passcode', 'JDVG_0080'), ('ID', 817207252)]), OrderedDict([('passcode', 'WVZZ_8258'), ('ID', 366064084)]), OrderedDict([('passcode', 'HYYZ_1160'), ('ID', 268792849)]), OrderedDict([('passcode', 'FEHT_2574'), ('ID', 241666989)]), OrderedDict([('passcode', 'RHJR_8146'), ('ID', 299679430)]), OrderedDict([('passcode', 'GHMC_9420'), ('ID', 892694139)]), OrderedDict([('passcode', 'YHDW_5584'), ('ID', 390895138)]), OrderedDict([('passcode', 'SBNV_6213'), ('ID', 748362643)]), OrderedDict([('passcode', 'ATRZ_4469'), ('ID', 205830132)]), OrderedDict([('passcode', 'IZPS_9382'), ('ID', 857930556)]), OrderedDict([('passcode', 'VDIF_7427'), ('ID', 261016286)]), OrderedDict([('passcode', 'CDDZ_0824'), ('ID', 892307160)]), OrderedDict([('passcode', 'PZEN_2570'), ('ID', 876155416)]), OrderedDict([('passcode', 'PTHS_6071'), ('ID', 544294453)]), OrderedDict([('passcode', 'XVOP_1733'), ('ID', 601478606)]), OrderedDict([('passcode', 'ABJB_3709'), ('ID', 419109737)]), OrderedDict([('passcode', 'KPKM_4686'), ('ID', 227580001)]), OrderedDict([('passcode', 'XMUM_6382'), ('ID', 837480170)]), OrderedDict([('passcode', 'NFVI_2705'), ('ID', 829278684)]), OrderedDict([('passcode', 'RVHO_4905'), ('ID', 138348014)]), OrderedDict([('passcode', 'AMYL_3423'), ('ID', 775104258)]), OrderedDict([('passcode', 'KTCZ_0575'), ('ID', 524340880)]), OrderedDict([('passcode', 'JQBK_0371'), ('ID', 800230579)]), OrderedDict([('passcode', 'PSMM_0813'), ('ID', 712935293)]), OrderedDict([('passcode', 'VYMB_6675'), ('ID', 603937930)]), OrderedDict([('passcode', 'IXBL_0415'), ('ID', 7961262)]), OrderedDict([('passcode', 'TVGR_4873'), ('ID', 7344865)]), OrderedDict([('passcode', 'UOGK_3279'), ('ID', 422271822)]), OrderedDict([('passcode', 'UEZY_0114'), ('ID', 292074138)]), OrderedDict([('passcode', 'JMRP_3549'), ('ID', 335792394)]), OrderedDict([('passcode', 'ESXC_0003'), ('ID', 103937958)]), OrderedDict([('passcode', 'SKQX_3495'), ('ID', 964570620)]), OrderedDict([('passcode', 'YKCV_4558'), ('ID', 563209299)]), OrderedDict([('passcode', 'XGFU_8622'), ('ID', 298146836)]), OrderedDict([('passcode', 'RZQX_4360'), ('ID', 930382632)]), OrderedDict([('passcode', 'BXMC_0203'), ('ID', 749377135)]), OrderedDict([('passcode', 'YAIK_4938'), ('ID', 469471165)]), OrderedDict([('passcode', 'MIKQ_7042'), ('ID', 347602037)]), OrderedDict([('passcode', 'OWON_5649'), ('ID', 285063370)]), OrderedDict([('passcode', 'LIQD_0303'), ('ID', 756510366)]), OrderedDict([('passcode', 'GGTI_4049'), ('ID', 734564227)]), OrderedDict([('passcode', 'TQSK_9056'), ('ID', 12989104)]), OrderedDict([('passcode', 'ODTM_7691'), ('ID', 468769137)]), OrderedDict([('passcode', 'RZUK_5253'), ('ID', 336099553)]), OrderedDict([('passcode', 'UHGB_2796'), ('ID', 575611935)]), OrderedDict([('passcode', 'GQWO_3404'), ('ID', 61342709)]), OrderedDict([('passcode', 'NWWJ_3089'), ('ID', 620769265)]), OrderedDict([('passcode', 'TGPO_4824'), ('ID', 303248834)]), OrderedDict([('passcode', 'GGMF_2867'), ('ID', 801986905)]), OrderedDict([('passcode', 'UADN_8894'), ('ID', 519762534)]), OrderedDict([('passcode', 'YGLT_3086'), ('ID', 32974166)]), OrderedDict([('passcode', 'XKBA_1407'), ('ID', 745467828)]), OrderedDict([('passcode', 'CRAV_8617'), ('ID', 74837493)]), OrderedDict([('passcode', 'QWRV_9786'), ('ID', 431575502)]), OrderedDict([('passcode', 'RZBT_6147'), ('ID', 867210391)]), OrderedDict([('passcode', 'JMRG_5837'), ('ID', 40961735)]), OrderedDict([('passcode', 'DPGM_9616'), ('ID', 376595327)]), OrderedDict([('passcode', 'PBIZ_5400'), ('ID', 293385593)]), OrderedDict([('passcode', 'SWRG_4985'), ('ID', 319786156)]), OrderedDict([('passcode', 'JJEK_3619'), ('ID', 56538178)]), OrderedDict([('passcode', 'OECO_4233'), ('ID', 203148041)]), OrderedDict([('passcode', 'DQFN_3771'), ('ID', 673516572)]), OrderedDict([('passcode', 'IDWN_5019'), ('ID', 154016205)]), OrderedDict([('passcode', 'NNCK_7636'), ('ID', 446352670)]), OrderedDict([('passcode', 'VYGI_3909'), ('ID', 66878281)]), OrderedDict([('passcode', 'ZVFX_7503'), ('ID', 937522301)]), OrderedDict([('passcode', 'MUMD_8071'), ('ID', 940175752)]), OrderedDict([('passcode', 'QFTT_0370'), ('ID', 887828432)]), OrderedDict([('passcode', 'JPHT_1442'), ('ID', 558692178)]), OrderedDict([('passcode', 'UYNF_1616'), ('ID', 560426367)]), OrderedDict([('passcode', 'VPXP_5331'), ('ID', 45324972)]), OrderedDict([('passcode', 'HKCY_7511'), ('ID', 762453923)]), OrderedDict([('passcode', 'WCMT_6114'), ('ID', 51619908)]), OrderedDict([('passcode', 'NVMJ_4586'), ('ID', 122318467)]), OrderedDict([('passcode', 'ABQE_0080'), ('ID', 180679709)]), OrderedDict([('passcode', 'ZTPO_4245'), ('ID', 861217071)]), OrderedDict([('passcode', 'KGFU_3890'), ('ID', 616901921)]), OrderedDict([('passcode', 'DVUF_0652'), ('ID', 418468247)]), OrderedDict([('passcode', 'VZDM_2015'), ('ID', 686548643)]), OrderedDict([('passcode', 'BSKW_4405'), ('ID', 707089185)]), OrderedDict([('passcode', 'QFNJ_1318'), ('ID', 120220973)]), OrderedDict([('passcode', 'JYZY_0269'), ('ID', 214396647)]), OrderedDict([('passcode', 'UFAP_3552'), ('ID', 83744014)]), OrderedDict([('passcode', 'UKOY_9484'), ('ID', 510806592)]), OrderedDict([('passcode', 'SUCZ_5488'), ('ID', 410556631)]), OrderedDict([('passcode', 'DYZY_5453'), ('ID', 502233789)]), OrderedDict([('passcode', 'RAFY_3236'), ('ID', 186912978)]), OrderedDict([('passcode', 'HUXO_1507'), ('ID', 208191031)]), OrderedDict([('passcode', 'HBIT_1348'), ('ID', 484306304)]), OrderedDict([('passcode', 'RKYJ_3792'), ('ID', 346031543)]), OrderedDict([('passcode', 'ULKF_0715'), ('ID', 984209640)]), OrderedDict([('passcode', 'UXUX_1494'), ('ID', 422643228)]), OrderedDict([('passcode', 'SVUB_3323'), ('ID', 690099235)]), OrderedDict([('passcode', 'OHMI_0880'), ('ID', 327924514)]), OrderedDict([('passcode', 'UIFE_4377'), ('ID', 974424674)]), OrderedDict([('passcode', 'QYUJ_9504'), ('ID', 741702175)]), OrderedDict([('passcode', 'TYPK_1514'), ('ID', 196832700)]), OrderedDict([('passcode', 'BTPA_7990'), ('ID', 549702249)]), OrderedDict([('passcode', 'NFLE_2251'), ('ID', 394137935)]), OrderedDict([('passcode', 'SQLA_2663'), ('ID', 221352986)]), OrderedDict([('passcode', 'ERBV_2506'), ('ID', 38440176)]), OrderedDict([('passcode', 'IBUH_2347'), ('ID', 275366554)]), OrderedDict([('passcode', 'LLPC_1441'), ('ID', 273556056)]), OrderedDict([('passcode', 'KTYU_6937'), ('ID', 208164826)]), OrderedDict([('passcode', 'KRBF_0203'), ('ID', 15943707)]), OrderedDict([('passcode', 'FWCX_8660'), ('ID', 182698111)]), OrderedDict([('passcode', 'DSTL_4814'), ('ID', 972491732)]), OrderedDict([('passcode', 'UJJN_2384'), ('ID', 486123261)]), OrderedDict([('passcode', 'OUNV_9570'), ('ID', 918414197)]), OrderedDict([('passcode', 'TBVK_4463'), ('ID', 488910447)]), OrderedDict([('passcode', 'IOGV_6338'), ('ID', 945991958)]), OrderedDict([('passcode', 'CDTN_2284'), ('ID', 893861871)]), OrderedDict([('passcode', 'AIMB_3306'), ('ID', 171737687)]), OrderedDict([('passcode', 'DCRJ_4264'), ('ID', 112484138)]), OrderedDict([('passcode', 'YLKK_6929'), ('ID', 546105601)]), OrderedDict([('passcode', 'ZLTK_7193'), ('ID', 479798973)]), OrderedDict([('passcode', 'JUSI_7054'), ('ID', 565187698)]), OrderedDict([('passcode', 'HOIB_7360'), ('ID', 151219386)]), OrderedDict([('passcode', 'FXXH_3421'), ('ID', 442407666)]), OrderedDict([('passcode', 'BYYT_2374'), ('ID', 449461225)]), OrderedDict([('passcode', 'DUHT_2677'), ('ID', 362592345)]), OrderedDict([('passcode', 'SLJS_7172'), ('ID', 811193976)]), OrderedDict([('passcode', 'OGMB_6468'), ('ID', 821537488)]), OrderedDict([('passcode', 'VXUW_4686'), ('ID', 912472867)]), OrderedDict([('passcode', 'NVKQ_7094'), ('ID', 885918297)]), OrderedDict([('passcode', 'IQCK_7938'), ('ID', 611723104)]), OrderedDict([('passcode', 'JRZT_6808'), ('ID', 140476789)]), OrderedDict([('passcode', 'YYDL_8288'), ('ID', 594742120)]), OrderedDict([('passcode', 'FZAN_6353'), ('ID', 666752630)]), OrderedDict([('passcode', 'ICNY_5967'), ('ID', 9452720)]), OrderedDict([('passcode', 'DMPV_1652'), ('ID', 268097515)]), OrderedDict([('passcode', 'EHGF_7236'), ('ID', 769416548)]), OrderedDict([('passcode', 'YTMK_5363'), ('ID', 217434025)]), OrderedDict([('passcode', 'TNYB_2794'), ('ID', 936827201)]), OrderedDict([('passcode', 'LJZF_1044'), ('ID', 758169783)]), OrderedDict([('passcode', 'VMGT_6215'), ('ID', 700484338)]), OrderedDict([('passcode', 'RDQS_6135'), ('ID', 86989484)]), OrderedDict([('passcode', 'RLBT_6280'), ('ID', 362591871)]), OrderedDict([('passcode', 'RBJV_1149'), ('ID', 646345505)]), OrderedDict([('passcode', 'PFTS_9909'), ('ID', 667198268)]), OrderedDict([('passcode', 'DTXM_0640'), ('ID', 369907004)]), OrderedDict([('passcode', 'TFMU_7103'), ('ID', 977276412)]), OrderedDict([('passcode', 'LQHQ_7837'), ('ID', 19688696)]), OrderedDict([('passcode', 'USTG_8968'), ('ID', 495479155)]), OrderedDict([('passcode', 'KQYF_1960'), ('ID', 900281850)]), OrderedDict([('passcode', 'WOQL_6205'), ('ID', 271270867)]), OrderedDict([('passcode', 'YFJM_2842'), ('ID', 666439836)]), OrderedDict([('passcode', 'JXUQ_2613'), ('ID', 193738349)]), OrderedDict([('passcode', 'JKTT_5318'), ('ID', 882773981)]), OrderedDict([('passcode', 'NLKL_1400'), ('ID', 38467540)]), OrderedDict([('passcode', 'FJEK_8891'), ('ID', 493549921)]), OrderedDict([('passcode', 'XTFB_2198'), ('ID', 187816569)]), OrderedDict([('passcode', 'MCUG_1798'), ('ID', 904571033)]), OrderedDict([('passcode', 'CTEK_6784'), ('ID', 807052754)]), OrderedDict([('passcode', 'LQKD_4486'), ('ID', 121110282)]), OrderedDict([('passcode', 'HRHB_2565'), ('ID', 37928333)]), OrderedDict([('passcode', 'FRZL_0613'), ('ID', 386003847)]), OrderedDict([('passcode', 'QARM_4943'), ('ID', 667315473)]), OrderedDict([('passcode', 'BZHT_2350'), ('ID', 461708374)]), OrderedDict([('passcode', 'GUXK_4383'), ('ID', 272829106)]), OrderedDict([('passcode', 'ODDO_7651'), ('ID', 447568247)]), OrderedDict([('passcode', 'FQHJ_6129'), ('ID', 919156639)]), OrderedDict([('passcode', 'CQQO_8520'), ('ID', 489829661)]), OrderedDict([('passcode', 'MVRL_0924'), ('ID', 880264414)]), OrderedDict([('passcode', 'ZURE_1335'), ('ID', 902990665)]), OrderedDict([('passcode', 'GKGF_1170'), ('ID', 850873217)]), OrderedDict([('passcode', 'LZOD_7227'), ('ID', 44939382)]), OrderedDict([('passcode', 'LBCS_7855'), ('ID', 38179738)]), OrderedDict([('passcode', 'LOQV_1463'), ('ID', 776303968)]), OrderedDict([('passcode', 'QKGB_8155'), ('ID', 583257179)]), OrderedDict([('passcode', 'EQJO_0577'), ('ID', 352397228)]), OrderedDict([('passcode', 'VWAZ_4235'), ('ID', 637431775)]), OrderedDict([('passcode', 'YBEI_3075'), ('ID', 893955693)]), OrderedDict([('passcode', 'SXDG_2311'), ('ID', 992455066)]), OrderedDict([('passcode', 'NHAU_6207'), ('ID', 745830423)]), OrderedDict([('passcode', 'MXIA_8952'), ('ID', 693152512)]), OrderedDict([('passcode', 'DGWH_4357'), ('ID', 862815289)]), OrderedDict([('passcode', 'TNJJ_2489'), ('ID', 630707667)]), OrderedDict([('passcode', 'VXJR_1418'), ('ID', 682725748)]), OrderedDict([('passcode', 'PHXB_9007'), ('ID', 708778696)]), OrderedDict([('passcode', 'OPDP_2006'), ('ID', 792107659)]), OrderedDict([('passcode', 'SMCC_5169'), ('ID', 37725346)]), OrderedDict([('passcode', 'BSBX_6705'), ('ID', 872837318)]), OrderedDict([('passcode', 'ESON_2199'), ('ID', 693282446)]), OrderedDict([('passcode', 'VWIO_1116'), ('ID', 211737006)]), OrderedDict([('passcode', 'ACPE_9462'), ('ID', 534049854)]), OrderedDict([('passcode', 'IANM_2590'), ('ID', 710116179)]), OrderedDict([('passcode', 'SINK_6927'), ('ID', 496781715)]), OrderedDict([('passcode', 'AOAI_1026'), ('ID', 811514307)]), OrderedDict([('passcode', 'YCAJ_5707'), ('ID', 7991898)]), OrderedDict([('passcode', 'UIMQ_1736'), ('ID', 373853752)]), OrderedDict([('passcode', 'SVOI_4549'), ('ID', 588700517)]), OrderedDict([('passcode', 'NSGH_7640'), ('ID', 101195537)]), OrderedDict([('passcode', 'HZIL_7940'), ('ID', 64410273)]), OrderedDict([('passcode', 'QQEO_5538'), ('ID', 296630950)]), OrderedDict([('passcode', 'PVKB_5457'), ('ID', 70600761)]), OrderedDict([('passcode', 'BMBD_0114'), ('ID', 582134626)]), OrderedDict([('passcode', 'ZKSQ_0946'), ('ID', 724809645)]), OrderedDict([('passcode', 'VYZH_4425'), ('ID', 856110862)]), OrderedDict([('passcode', 'UJJM_9966'), ('ID', 896608058)]), OrderedDict([('passcode', 'JUEV_1666'), ('ID', 814954219)]), OrderedDict([('passcode', 'GCFF_4590'), ('ID', 244537766)]), OrderedDict([('passcode', 'EGEG_5976'), ('ID', 225217215)]), OrderedDict([('passcode', 'NUZU_0558'), ('ID', 813693400)]), OrderedDict([('passcode', 'KLCE_1432'), ('ID', 34069388)]), OrderedDict([('passcode', 'RPVX_5915'), ('ID', 764778628)]), OrderedDict([('passcode', 'LGRJ_7845'), ('ID', 309968726)]), OrderedDict([('passcode', 'RJGR_2523'), ('ID', 122922809)]), OrderedDict([('passcode', 'OGFW_8581'), ('ID', 399020018)]), OrderedDict([('passcode', 'WFZG_9287'), ('ID', 453387451)]), OrderedDict([('passcode', 'GSFD_7281'), ('ID', 97702128)]), OrderedDict([('passcode', 'BLGU_4222'), ('ID', 440923381)]), OrderedDict([('passcode', 'AGAX_3597'), ('ID', 462411423)]), OrderedDict([('passcode', 'ZWYV_2154'), ('ID', 600051537)]), OrderedDict([('passcode', 'EMPQ_3973'), ('ID', 865980842)]), OrderedDict([('passcode', 'JPKH_3689'), ('ID', 640614018)]), OrderedDict([('passcode', 'TCQQ_4186'), ('ID', 770053493)]), OrderedDict([('passcode', 'LTYN_1158'), ('ID', 681262354)]), OrderedDict([('passcode', 'OPOC_8130'), ('ID', 675957473)]), OrderedDict([('passcode', 'PHTK_8146'), ('ID', 850814589)]), OrderedDict([('passcode', 'RBFR_5916'), ('ID', 108344284)]), OrderedDict([('passcode', 'HMJH_3014'), ('ID', 137664571)]), OrderedDict([('passcode', 'UTYZ_0772'), ('ID', 777751664)]), OrderedDict([('passcode', 'WPFO_3972'), ('ID', 969433718)]), OrderedDict([('passcode', 'AEAF_7849'), ('ID', 388981166)]), OrderedDict([('passcode', 'OHXC_8653'), ('ID', 218844897)]), OrderedDict([('passcode', 'EHGW_9127'), ('ID', 532512312)]), OrderedDict([('passcode', 'UYGQ_9836'), ('ID', 308477567)]), OrderedDict([('passcode', 'DBGE_5258'), ('ID', 539927740)]), OrderedDict([('passcode', 'ABAE_3361'), ('ID', 54138397)]), OrderedDict([('passcode', 'TDBI_2959'), ('ID', 8396459)]), OrderedDict([('passcode', 'HNVJ_1700'), ('ID', 591070041)]), OrderedDict([('passcode', 'KCNL_0156'), ('ID', 195980159)]), OrderedDict([('passcode', 'ZFCV_4450'), ('ID', 404119891)]), OrderedDict([('passcode', 'OZBX_5730'), ('ID', 653540230)]), OrderedDict([('passcode', 'VFPN_1932'), ('ID', 569376133)]), OrderedDict([('passcode', 'DXUX_5516'), ('ID', 75453860)]), OrderedDict([('passcode', 'WHYY_2377'), ('ID', 135588154)]), OrderedDict([('passcode', 'RLGE_5210'), ('ID', 24477506)]), OrderedDict([('passcode', 'ZALD_8008'), ('ID', 275565652)]), OrderedDict([('passcode', 'YNHI_5903'), ('ID', 562484974)]), OrderedDict([('passcode', 'TGAU_9467'), ('ID', 669949754)]), OrderedDict([('passcode', 'CHHY_2360'), ('ID', 398322717)]), OrderedDict([('passcode', 'OBEU_8780'), ('ID', 203734376)]), OrderedDict([('passcode', 'KMIE_5186'), ('ID', 240509536)]), OrderedDict([('passcode', 'YBAO_7811'), ('ID', 110110094)]), OrderedDict([('passcode', 'MSQH_6501'), ('ID', 54212529)]), OrderedDict([('passcode', 'XQJK_7917'), ('ID', 39581233)]), OrderedDict([('passcode', 'PNYB_9892'), ('ID', 773454934)]), OrderedDict([('passcode', 'QPTJ_1636'), ('ID', 375432487)]), OrderedDict([('passcode', 'IOTH_8353'), ('ID', 238379178)]), OrderedDict([('passcode', 'OXAO_4203'), ('ID', 105327983)]), OrderedDict([('passcode', 'WHMT_2881'), ('ID', 954022092)]), OrderedDict([('passcode', 'ZKAA_5749'), ('ID', 927446613)]), OrderedDict([('passcode', 'GBZE_6268'), ('ID', 840812689)]), OrderedDict([('passcode', 'MIVK_3547'), ('ID', 362899030)]), OrderedDict([('passcode', 'NODI_8989'), ('ID', 231027978)]), OrderedDict([('passcode', 'LIFI_0541'), ('ID', 535588777)]), OrderedDict([('passcode', 'ZNQF_4653'), ('ID', 347879942)]), OrderedDict([('passcode', 'OPJF_7400'), ('ID', 637844617)]), OrderedDict([('passcode', 'OMSO_3370'), ('ID', 248302643)]), OrderedDict([('passcode', 'COSW_1371'), ('ID', 17100876)]), OrderedDict([('passcode', 'WRSD_1168'), ('ID', 583683242)]), OrderedDict([('passcode', 'SENL_3743'), ('ID', 443599032)]), OrderedDict([('passcode', 'SMGB_5929'), ('ID', 516622577)]), OrderedDict([('passcode', 'KBSZ_9018'), ('ID', 585050010)]), OrderedDict([('passcode', 'TCEO_2010'), ('ID', 519419378)]), OrderedDict([('passcode', 'OELX_5734'), ('ID', 56572732)]), OrderedDict([('passcode', 'LRVV_1617'), ('ID', 205999929)]), OrderedDict([('passcode', 'DCYF_4646'), ('ID', 760322102)]), OrderedDict([('passcode', 'TATI_6658'), ('ID', 966130530)]), OrderedDict([('passcode', 'EVJP_0304'), ('ID', 15381075)]), OrderedDict([('passcode', 'LPGQ_6720'), ('ID', 707314477)]), OrderedDict([('passcode', 'NUDG_8845'), ('ID', 158966506)]), OrderedDict([('passcode', 'ITBZ_1430'), ('ID', 761077254)]), OrderedDict([('passcode', 'GHKW_4820'), ('ID', 658851128)]), OrderedDict([('passcode', 'MTFB_3664'), ('ID', 340841360)]), OrderedDict([('passcode', 'IWQN_8840'), ('ID', 376981844)]), OrderedDict([('passcode', 'VOXR_3240'), ('ID', 384541800)]), OrderedDict([('passcode', 'BSVF_8114'), ('ID', 718728065)]), OrderedDict([('passcode', 'FHBO_0170'), ('ID', 77928638)]), OrderedDict([('passcode', 'GZRL_3312'), ('ID', 65267775)]), OrderedDict([('passcode', 'PUIK_3140'), ('ID', 966211323)]), OrderedDict([('passcode', 'LDPM_1512'), ('ID', 394613885)]), OrderedDict([('passcode', 'RADH_9541'), ('ID', 148977484)]), OrderedDict([('passcode', 'PSVV_4447'), ('ID', 503781457)]), OrderedDict([('passcode', 'CQJS_1990'), ('ID', 447546562)]), OrderedDict([('passcode', 'KJPX_3018'), ('ID', 42841163)]), OrderedDict([('passcode', 'ONNP_2864'), ('ID', 513319566)]), OrderedDict([('passcode', 'DPHE_9918'), ('ID', 705770262)]), OrderedDict([('passcode', 'JTYE_3516'), ('ID', 158962634)]), OrderedDict([('passcode', 'JUJM_1087'), ('ID', 684132799)]), OrderedDict([('passcode', 'DFFH_4622'), ('ID', 541642611)]), OrderedDict([('passcode', 'UGVH_0255'), ('ID', 161900449)]), OrderedDict([('passcode', 'ILMP_6995'), ('ID', 458740862)]), OrderedDict([('passcode', 'AJLB_4291'), ('ID', 781567734)]), OrderedDict([('passcode', 'PIOK_0675'), ('ID', 142542616)]), OrderedDict([('passcode', 'ANEP_6565'), ('ID', 808789713)]), OrderedDict([('passcode', 'GLXY_2148'), ('ID', 154262486)]), OrderedDict([('passcode', 'HVJP_9146'), ('ID', 609748191)]), OrderedDict([('passcode', 'GRNJ_8809'), ('ID', 425633817)]), OrderedDict([('passcode', 'DFPY_2043'), ('ID', 816529069)]), OrderedDict([('passcode', 'TRQT_4221'), ('ID', 613464187)]), OrderedDict([('passcode', 'YUPH_8136'), ('ID', 142722024)]), OrderedDict([('passcode', 'CKNR_8047'), ('ID', 575365599)]), OrderedDict([('passcode', 'ZSBJ_7819'), ('ID', 397576267)]), OrderedDict([('passcode', 'QAUZ_6662'), ('ID', 880287610)]), OrderedDict([('passcode', 'AVZL_9314'), ('ID', 204435578)]), OrderedDict([('passcode', 'FJCH_7572'), ('ID', 324000517)]), OrderedDict([('passcode', 'ENST_9818'), ('ID', 353665590)]), OrderedDict([('passcode', 'BHCO_1322'), ('ID', 800600813)]), OrderedDict([('passcode', 'UYJC_4600'), ('ID', 901283949)]), OrderedDict([('passcode', 'VKIG_2504'), ('ID', 248908505)]), OrderedDict([('passcode', 'ARLZ_8946'), ('ID', 453185747)]), OrderedDict([('passcode', 'WGWS_4618'), ('ID', 425511351)]), OrderedDict([('passcode', 'GMTM_3550'), ('ID', 999794450)]), OrderedDict([('passcode', 'BNRI_1985'), ('ID', 948271779)]), OrderedDict([('passcode', 'WSIW_2837'), ('ID', 45565383)]), OrderedDict([('passcode', 'ATGI_3718'), ('ID', 401815154)]), OrderedDict([('passcode', 'NCAQ_3638'), ('ID', 7454968)]), OrderedDict([('passcode', 'EDRU_6953'), ('ID', 668860799)]), OrderedDict([('passcode', 'CQXU_7616'), ('ID', 356808899)]), OrderedDict([('passcode', 'ONLJ_9214'), ('ID', 570587299)]), OrderedDict([('passcode', 'OUWS_7998'), ('ID', 510544739)]), OrderedDict([('passcode', 'XLKG_1616'), ('ID', 850514949)]), OrderedDict([('passcode', 'CNXA_7564'), ('ID', 419873509)]), OrderedDict([('passcode', 'DZNT_6461'), ('ID', 484778580)]), OrderedDict([('passcode', 'XNYK_1142'), ('ID', 368928214)]), OrderedDict([('passcode', 'MFYU_0308'), ('ID', 503150505)]), OrderedDict([('passcode', 'UEVF_1064'), ('ID', 665996516)]), OrderedDict([('passcode', 'IQPC_7152'), ('ID', 447150618)]), OrderedDict([('passcode', 'EZAY_3370'), ('ID', 62547857)]), OrderedDict([('passcode', 'VNAG_0892'), ('ID', 667272673)]), OrderedDict([('passcode', 'BRZV_3164'), ('ID', 254651745)]), OrderedDict([('passcode', 'CYMI_0464'), ('ID', 419058399)]), OrderedDict([('passcode', 'FHIT_7947'), ('ID', 323000747)]), OrderedDict([('passcode', 'DDYN_4499'), ('ID', 852312468)]), OrderedDict([('passcode', 'CPNS_4773'), ('ID', 824537041)]), OrderedDict([('passcode', 'MRLB_8655'), ('ID', 454520310)]), OrderedDict([('passcode', 'HXLB_9842'), ('ID', 531230764)]), OrderedDict([('passcode', 'WHGC_7910'), ('ID', 816481217)]), OrderedDict([('passcode', 'NNJY_6679'), ('ID', 750581910)]), OrderedDict([('passcode', 'ETDF_9135'), ('ID', 383745668)]), OrderedDict([('passcode', 'SIFQ_4486'), ('ID', 923675259)]), OrderedDict([('passcode', 'PSIT_0638'), ('ID', 799124255)]), OrderedDict([('passcode', 'UBGF_1201'), ('ID', 918996500)]), OrderedDict([('passcode', 'CHOD_7546'), ('ID', 634793942)]), OrderedDict([('passcode', 'EPRE_2301'), ('ID', 12048560)]), OrderedDict([('passcode', 'IQVB_7001'), ('ID', 704776805)]), OrderedDict([('passcode', 'KPMZ_3035'), ('ID', 618837274)]), OrderedDict([('passcode', 'XOLG_0585'), ('ID', 984281812)]), OrderedDict([('passcode', 'OMWP_9791'), ('ID', 994931054)]), OrderedDict([('passcode', 'CCZQ_3901'), ('ID', 220619003)]), OrderedDict([('passcode', 'WKMC_3263'), ('ID', 581011969)]), OrderedDict([('passcode', 'HIRI_4488'), ('ID', 696370326)]), OrderedDict([('passcode', 'VCEN_7463'), ('ID', 577466823)]), OrderedDict([('passcode', 'FQRH_3907'), ('ID', 634226398)]), OrderedDict([('passcode', 'ZLQM_4901'), ('ID', 138968061)]), OrderedDict([('passcode', 'AJRA_5345'), ('ID', 421421213)]), OrderedDict([('passcode', 'PVWP_3531'), ('ID', 961141025)]), OrderedDict([('passcode', 'ZUHD_4506'), ('ID', 746025451)]), OrderedDict([('passcode', 'AOYK_7881'), ('ID', 567537219)]), OrderedDict([('passcode', 'EBTU_1278'), ('ID', 302231912)]), OrderedDict([('passcode', 'FLKR_8300'), ('ID', 600006625)]), OrderedDict([('passcode', 'LCOW_2495'), ('ID', 896965064)]), OrderedDict([('passcode', 'XARE_9466'), ('ID', 590703226)]), OrderedDict([('passcode', 'QKJE_3195'), ('ID', 337070952)]), OrderedDict([('passcode', 'HXXJ_0436'), ('ID', 650280014)]), OrderedDict([('passcode', 'XXDE_5233'), ('ID', 703770115)]), OrderedDict([('passcode', 'TUNZ_8461'), ('ID', 80820959)]), OrderedDict([('passcode', 'CAIZ_2100'), ('ID', 286002877)]), OrderedDict([('passcode', 'ZGKM_0385'), ('ID', 807420598)]), OrderedDict([('passcode', 'STBS_0894'), ('ID', 255533812)]), OrderedDict([('passcode', 'DADE_3039'), ('ID', 862103101)]), OrderedDict([('passcode', 'BTAY_1399'), ('ID', 9843797)]), OrderedDict([('passcode', 'SYRL_6917'), ('ID', 73452857)]), OrderedDict([('passcode', 'JEUN_5325'), ('ID', 873346641)]), OrderedDict([('passcode', 'VQVC_4810'), ('ID', 404153607)]), OrderedDict([('passcode', 'IKHB_3927'), ('ID', 722258015)]), OrderedDict([('passcode', 'ZZWF_5543'), ('ID', 261415870)]), OrderedDict([('passcode', 'SNMG_7721'), ('ID', 945398104)]), OrderedDict([('passcode', 'EAQM_6851'), ('ID', 749373914)]), OrderedDict([('passcode', 'KJFZ_1104'), ('ID', 718524276)]), OrderedDict([('passcode', 'XWJU_2074'), ('ID', 119048495)]), OrderedDict([('passcode', 'LKVP_3386'), ('ID', 670669918)]), OrderedDict([('passcode', 'VSKD_5906'), ('ID', 364339468)]), OrderedDict([('passcode', 'AJHP_6540'), ('ID', 423729036)]), OrderedDict([('passcode', 'FTCG_9231'), ('ID', 942135677)]), OrderedDict([('passcode', 'EOIU_7718'), ('ID', 628165974)]), OrderedDict([('passcode', 'XGEM_4297'), ('ID', 869416886)]), OrderedDict([('passcode', 'KJNW_0344'), ('ID', 73927513)]), OrderedDict([('passcode', 'BSUT_6633'), ('ID', 719626157)]), OrderedDict([('passcode', 'JKCY_6286'), ('ID', 989771373)]), OrderedDict([('passcode', 'OVHC_6755'), ('ID', 836190174)]), OrderedDict([('passcode', 'OPPE_2392'), ('ID', 156169146)]), OrderedDict([('passcode', 'DRTB_7307'), ('ID', 950674935)]), OrderedDict([('passcode', 'KDOY_1856'), ('ID', 453402567)]), OrderedDict([('passcode', 'IIUK_5507'), ('ID', 133444919)]), OrderedDict([('passcode', 'MBTB_8097'), ('ID', 532609988)]), OrderedDict([('passcode', 'ZSJK_6097'), ('ID', 714429483)]), OrderedDict([('passcode', 'CMME_2043'), ('ID', 642619274)]), OrderedDict([('passcode', 'GDMT_4105'), ('ID', 43548523)]), OrderedDict([('passcode', 'IOGU_9807'), ('ID', 977489727)]), OrderedDict([('passcode', 'AJJV_6711'), ('ID', 353050744)]), OrderedDict([('passcode', 'NDIU_0464'), ('ID', 148880000)]), OrderedDict([('passcode', 'TPJY_5025'), ('ID', 12756326)]), OrderedDict([('passcode', 'NIWA_8054'), ('ID', 875668687)]), OrderedDict([('passcode', 'TGKM_5417'), ('ID', 920526978)]), OrderedDict([('passcode', 'VXHC_5565'), ('ID', 162561334)]), OrderedDict([('passcode', 'ZTLQ_9903'), ('ID', 150922423)]), OrderedDict([('passcode', 'OWAG_5874'), ('ID', 623525508)]), OrderedDict([('passcode', 'ZGUO_4820'), ('ID', 278286563)]), OrderedDict([('passcode', 'WLYA_0255'), ('ID', 22728951)]), OrderedDict([('passcode', 'CIVJ_0958'), ('ID', 806094565)]), OrderedDict([('passcode', 'EFPN_6636'), ('ID', 749941601)]), OrderedDict([('passcode', 'MADA_6401'), ('ID', 422043897)]), OrderedDict([('passcode', 'SSCD_6780'), ('ID', 664427288)]), OrderedDict([('passcode', 'QQFC_4532'), ('ID', 453669060)]), OrderedDict([('passcode', 'AHMZ_7109'), ('ID', 589247757)]), OrderedDict([('passcode', 'QHAM_4077'), ('ID', 596087891)]), OrderedDict([('passcode', 'CINO_1482'), ('ID', 734746403)]), OrderedDict([('passcode', 'XITP_4181'), ('ID', 710930209)]), OrderedDict([('passcode', 'CWNC_8132'), ('ID', 205031767)]), OrderedDict([('passcode', 'XHWB_6798'), ('ID', 781013785)]), OrderedDict([('passcode', 'XZAC_6603'), ('ID', 697267828)]), OrderedDict([('passcode', 'NUNE_7241'), ('ID', 393901285)]), OrderedDict([('passcode', 'NMXU_4306'), ('ID', 198819201)]), OrderedDict([('passcode', 'KLYI_4025'), ('ID', 750040450)]), OrderedDict([('passcode', 'SWSN_9701'), ('ID', 42153139)]), OrderedDict([('passcode', 'DINH_3344'), ('ID', 862326707)]), OrderedDict([('passcode', 'KRAV_5166'), ('ID', 134919992)]), OrderedDict([('passcode', 'GMEQ_3421'), ('ID', 545841377)]), OrderedDict([('passcode', 'TLGA_0844'), ('ID', 64073797)]), OrderedDict([('passcode', 'FEHT_2239'), ('ID', 651699918)]), OrderedDict([('passcode', 'VZXR_4735'), ('ID', 480697014)]), OrderedDict([('passcode', 'VUCB_1081'), ('ID', 733579341)]), OrderedDict([('passcode', 'MDIK_9730'), ('ID', 206806756)]), OrderedDict([('passcode', 'VLUJ_5760'), ('ID', 459600178)]), OrderedDict([('passcode', 'WGYP_5416'), ('ID', 414738763)]), OrderedDict([('passcode', 'MXWV_3856'), ('ID', 174763922)]), OrderedDict([('passcode', 'GAIH_3819'), ('ID', 253333372)]), OrderedDict([('passcode', 'QKKZ_2261'), ('ID', 243871474)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="code.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="fullRandom" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="nih_end" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="end_nih"/>
    <LoopTerminator name="nih_end"/>
  </Flow>
</PsychoPy2experiment>
